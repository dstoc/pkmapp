{"version":3,"file":"block-selection-util.js","sourceRoot":"","sources":["../src/block-selection-util.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HostContext} from './markdown/host-context.js';\nimport {ViewModelNode} from './markdown/view-model.js';\nimport {getContainingTransclusion} from './markdown/transclusion.js';\nimport {assert, cast} from './asserts.js';\nimport {focusNode} from './markdown/host-context.js';\nimport {\n  findPreviousEditable,\n  findNextEditable,\n} from './markdown/view-model-util.js';\nimport {MarkdownInline} from './markdown/inline-render.js';\nimport {children} from './markdown/view-model-util.js';\n\nexport function getBlockSelectionTarget(\n  element: Element & {hostContext?: HostContext; node?: ViewModelNode}\n) {\n  if (element.hostContext?.hasSelection) return element;\n  // Retarget if there's any containing transclusion that has a selection.\n  let transclusion;\n  do {\n    transclusion = getContainingTransclusion(transclusion ?? element);\n  } while (transclusion && !cast(transclusion.hostContext).hasSelection);\n  if (transclusion && cast(transclusion.hostContext).hasSelection) {\n    assert(transclusion.node);\n    return transclusion;\n  }\n  return;\n}\n\nexport function maybeRemoveSelectedNodes(inline: MarkdownInline) {\n  const {hostContext} = getBlockSelectionTarget(inline) ?? {};\n  if (!hostContext) return false;\n  return maybeRemoveSelectedNodesIn(hostContext);\n}\n\nexport function maybeRemoveSelectedNodesIn(hostContext: HostContext) {\n  if (!hostContext.hasSelection) return false;\n  const nodes = hostContext.selection;\n  const context = [];\n  const root = cast(hostContext.root);\n  const finish = root.viewModel.tree.edit();\n  try {\n    for (const node of nodes) {\n      node.viewModel.previousSibling &&\n        context.push(node.viewModel.previousSibling);\n      node.viewModel.parent && context.push(node.viewModel.parent);\n      if (node.type === 'section' && node.viewModel.parent) {\n        for (const child of children(node)) {\n          child.viewModel.insertBefore(cast(node.viewModel.parent), node);\n        }\n      }\n      node.viewModel.remove();\n    }\n    let didFocus = false;\n    for (const node of context) {\n      // TODO: this isn't a perfect test that the node is still connected\n      if (node.viewModel.parent) {\n        const prev = findPreviousEditable(node, root, true);\n        if (prev) {\n          focusNode(hostContext, prev, -Infinity);\n          didFocus = true;\n          break;\n        }\n      }\n    }\n    if (!didFocus) {\n      const next = findNextEditable(root, root, true);\n      if (next) {\n        focusNode(hostContext, next, 0);\n        didFocus = true;\n      }\n    }\n  } finally {\n    finish();\n  }\n  hostContext.clearSelection();\n  return true;\n}\n"]}