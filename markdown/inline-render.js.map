{"version":3,"file":"inline-render.js","sourceRoot":"","sources":["../../src/markdown/inline-render.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {contextProvided} from '../deps/lit-labs-context.js';\nimport {css, customElement, html, LitElement, property, repeat, TemplateResult,} from '../deps/lit.js';\nimport Parser from '../deps/tree-sitter.js';\n\nimport {HostContext, hostContext} from './host-context.js';\nimport {InlineViewModelNode, ViewModelNode} from './view-model.js';\n\nexport interface InlineInputPoint {\n  span?: MarkdownSpan;\n  index: number;\n}\n\nexport interface InlineInput {\n  inline: MarkdownInline;\n  node: ViewModelNode;\n  content: string;\n  inputEvent: InputEvent;\n  inputStart: InlineInputPoint;\n  inputEnd: InlineInputPoint;\n}\n\nexport interface InlineKeyDown {\n  inline: MarkdownInline;\n  node: ViewModelNode;\n  keyboardEvent: KeyboardEvent;\n  inputEvent: InputEvent;\n}\n\nexport interface InlineLinkClick {\n  type: string;\n  destination: string;\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    'inline-input': CustomEvent<InlineInput>;\n    'inline-keydown': CustomEvent<InlineInput>;\n    'inline-link-click': CustomEvent<InlineLinkClick>;\n  }\n}\n\n@customElement('md-inline')\nexport class MarkdownInline extends LitElement {\n  static override get styles() {\n    return [\n      css`\n        md-inline {\n          display: block;\n          outline: none;\n        }\n        md-inline[active] {\n          white-space: pre;\n          --focus-invalid: --;\n        }\n        md-inline[active] * {\n          white-space: pre-wrap;\n        }\n        md-span a,\n        md-span {\n          visibility: visible;\n          font-size: 16px;\n        }\n        md-span[type='backslash_escape']::first-letter {\n          font-size: 0;\n        }\n        md-span[type='link_destination'],\n        md-span[type='link_title'],\n        md-span[type='code_span_delimiter'],\n        md-span[type='emphasis_delimiter'] {\n          display: var(--focus-invalid, none);\n        }\n        md-span[type='inline_link'],\n        md-span[type='image'],\n        md-span[type='shortcut_link'] {\n          visibility: var(--focus-invalid, collapse);\n          font-size: var(--focus-invalid, 0);\n        }\n        md-span[type='shortcut_link'],\n        md-span[type='inline_link'] {\n          color: blue;\n        }\n        md-span[type='emphasis'] {\n          font-style: italic;\n        }\n        md-span[type='strong_emphasis'] {\n          font-weight: bold;\n        }\n        md-span[type='code_span'] {\n          white-space: pre;\n          font-family: monospace;\n        }\n      `,\n    ];\n  }\n  constructor() {\n    super();\n    this.addEventListener('beforeinput', this.onBeforeInput, {capture: true});\n    this.addEventListener('keydown', this.onKeyDown, {capture: true});\n    this.addEventListener('pointerup', () => {\n      if (this.hasFocus) {\n        this.active = true;\n      }\n    });\n    this.addEventListener('focus', () => {\n      this.hasFocus = true;\n    });\n    this.addEventListener('blur', () => {\n      this.active = false;\n      this.hasFocus = false;\n    });\n  }\n  @contextProvided({context: hostContext, subscribe: true})\n  @property({attribute: false})\n  hostContext: HostContext|undefined;\n  @property({type: Object, reflect: false}) node: InlineViewModelNode|undefined;\n  @property({type: Boolean, reflect: true}) contenteditable = true;\n  @property({type: Boolean, reflect: true}) active = false;\n  hasFocus = false;\n\n  override render() {\n    if (!this.node) return;\n    return html`<md-span\n      .node=${this.node.viewModel.inlineTree!.rootNode}\n      .active=${this.active}\n    ></md-span>`;\n  }\n  override willUpdate(changedProperties: Map<string, unknown>) {\n    if (changedProperties.has('node')) {\n      const oldNode = changedProperties.get('node') as ViewModelNode;\n      this.removeObserver(oldNode);\n      this.addObserver(this.node);\n    }\n  }\n  override updated() {\n    this.maybeSetFocus();\n  }\n  async maybeSetFocus() {\n    if (this.hostContext?.focusNode !== this.node) return;\n    // TODO: What are we waiting for?\n    await 0;\n    if (this.hostContext?.focusNode !== this.node) return;\n    if (!this.isConnected) return;\n    const selection = (this.getRootNode()! as Document).getSelection()!;\n    const range = document.createRange();\n    range.setStart(this, 0);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    this.active = true;\n    let focusOffset = this.hostContext?.focusOffset;\n    if (focusOffset !== undefined) {\n      if (focusOffset < 0 || Object.is(focusOffset, -0)) {\n        let index = NaN;\n        let last = NaN;\n        do {\n          last = index;\n          selection.modify('move', 'forward', 'line');\n          ({\n            start: {index},\n          } = MarkdownInline.getSelectionRange(selection));\n        } while (index !== last);\n        selection.modify('move', 'backward', 'lineboundary');\n        focusOffset = -focusOffset;\n      }\n      if (focusOffset === Infinity) {\n        selection.modify('move', 'forward', 'lineboundary');\n      } else {\n        // TODO: Check for overrun first line, but note that this conflicts\n        // with the edit/setFocus case.\n        for (let i = 0; i < focusOffset; i++) {\n          selection.modify('move', 'forward', 'character');\n        }\n      }\n    }\n    // TODO: Avoid this by always maintaining accurate values?\n    setTimeout(() => {\n      this.hostContext!.focusNode = undefined;\n      this.hostContext!.focusOffset = undefined;\n    });\n  }\n  protected override createRenderRoot() {\n    return this;\n  }\n  static nodeOffsetToInputPoint(node: Node, offset: number): InlineInputPoint {\n    if (node instanceof MarkdownInline) {\n      return {index: 0};\n    }\n    let previous = node.previousSibling;\n    while (previous && previous.nodeType !== Node.ELEMENT_NODE) {\n      previous = previous.previousSibling;\n    }\n    let index: number;\n    if (previous) {\n      index = (previous as MarkdownSpan).node!.endIndex + offset;\n    } else {\n      index = (node.parentElement as MarkdownSpan).node!.startIndex + offset;\n    }\n    return {\n      span: node.parentElement as MarkdownSpan,\n      index,\n    };\n  }\n  static getSelectionRange(selection: Selection) {\n    const start = MarkdownInline.nodeOffsetToInputPoint(\n        selection.anchorNode!, selection.anchorOffset);\n    const end = MarkdownInline.nodeOffsetToInputPoint(\n        selection.focusNode!, selection.focusOffset);\n    return {start, end};\n  }\n  /**\n   * Moves the caret up one line. Returns true if it does, otherwise returns the\n   * index of the caret position on the first line.\n   */\n  moveCaretUp(): true|number {\n    const selection = (this.getRootNode()! as Document).getSelection()!;\n    const initialRange = selection.getRangeAt(0);\n    const {start: offsetStart} = MarkdownInline.getSelectionRange(selection);\n    selection.modify('move', 'backward', 'lineboundary');\n    const {start: lineStart} = MarkdownInline.getSelectionRange(selection);\n    selection.removeAllRanges();\n    selection.addRange(initialRange);\n    selection.modify('move', 'backward', 'line');\n    const {start: result} = MarkdownInline.getSelectionRange(selection);\n    return (\n        result.index < lineStart.index || offsetStart.index - lineStart.index);\n  }\n  /**\n   * Moves the caret down one line. Returns true if it does, otherwise returns\n   * the index of the caret position on the first line.\n   */\n  moveCaretDown(): true|number {\n    const selection = (this.getRootNode()! as Document).getSelection()!;\n    const initialRange = selection.getRangeAt(0);\n    const {start: offsetStart} = MarkdownInline.getSelectionRange(selection);\n    selection.modify('move', 'backward', 'lineboundary');\n    const {start: lineStart} = MarkdownInline.getSelectionRange(selection);\n    selection.modify('move', 'forward', 'lineboundary');\n    const {start: lineEnd} = MarkdownInline.getSelectionRange(selection);\n    selection.removeAllRanges();\n    selection.addRange(initialRange);\n    selection.modify('move', 'forward', 'line');\n    const {start: result} = MarkdownInline.getSelectionRange(selection);\n    return result.index > lineEnd.index || offsetStart.index - lineStart.index;\n  }\n  getSelection() {\n    const selection: Selection =\n        (this.getRootNode()! as Document).getSelection()!;\n    return MarkdownInline.getSelectionRange(selection);\n  }\n  onKeyDown(e: KeyboardEvent) {\n    const inlineKeydown = {\n      inline: this,\n      node: this.node!,\n      keyboardEvent: e,\n    };\n    this.dispatchEvent(new CustomEvent('inline-keydown', {\n      detail: inlineKeydown,\n      bubbles: true,\n      composed: true,\n    }));\n  }\n  onBeforeInput(e: InputEvent) {\n    if (!this.node) return;\n    e.preventDefault();\n    const selection: Selection =\n        (this.getRootNode()! as Document).getSelection()!;\n    const {start: inputStart, end: inputEnd} =\n        MarkdownInline.getSelectionRange(selection);\n    const inlineInput: InlineInput = {\n      inline: this,\n      node: this.node!,\n      inputEvent: e,\n      inputStart,\n      inputEnd,\n      content: this.node.content,\n    };\n\n    this.dispatchEvent(new CustomEvent('inline-input', {\n      detail: inlineInput,\n      bubbles: true,\n      composed: true,\n    }));\n  }\n  private readonly observer = (node: ViewModelNode) => {\n    if (node !== this.node) {\n      this.removeObserver(node);\n      return;\n    }\n    this.requestUpdate();\n  };\n  private addObserver(node: ViewModelNode|undefined) {\n    node?.viewModel.observe.add(this.observer);\n  }\n  private removeObserver(node: ViewModelNode|undefined) {\n    node?.viewModel.observe.remove(this.observer);\n  }\n}\n\n@customElement('md-span')\nexport class MarkdownSpan extends LitElement {\n  @property({type: Boolean, reflect: true}) active = false;\n  @property({type: Boolean, reflect: true}) formatting = false;\n  @property({type: String, reflect: true}) type = '';\n\n  @property({type: Object, reflect: false}) node?: Parser.SyntaxNode;\n  nodeIds = new NodeIds();\n\n  constructor() {\n    super();\n  }\n\n  override shouldUpdate(changed: Map<string, unknown>) {\n    let result = false;\n    if (changed.has('node')) {\n      const oldSyntaxNode =\n          changed.get('node') as | Parser.SyntaxNode | undefined;\n      const newSyntaxNode = this.node;\n      if (newSyntaxNode &&\n          (!oldSyntaxNode || oldSyntaxNode.id !== newSyntaxNode.id)) {\n        result = true;\n        this.nodeIds?.migrate(oldSyntaxNode, newSyntaxNode);\n      }\n    }\n    return result;\n  }\n  protected override createRenderRoot() {\n    return this;\n  }\n  private onLinkClick(event: Event) {\n    event.preventDefault();\n    const anchor = event.composedPath()[0] as HTMLAnchorElement;\n    const inlineLinkClick: InlineLinkClick = {\n      type: this.node!.type,\n      destination: anchor.getAttribute('href') ?? '',\n    };\n    this.dispatchEvent(new CustomEvent('inline-link-click', {\n      detail: inlineLinkClick,\n      bubbles: true,\n      composed: true,\n    }));\n  }\n  override render() {\n    const node = this.node;\n    if (!node) return html``;\n    if (typeof node === 'string') {\n      this.type = '';\n      return html`${node}`;\n    }\n    this.type = node.type;\n    this.formatting = isFormatting(node);\n    let index = node.startIndex;\n\n    if (!this.active &&\n        (node.type === 'inline_link' || node.type === 'shortcut_link')) {\n      const text =\n          node.namedChildren.find(node => node.type === 'link_text')?.text ??\n          '';\n      const destination =\n          node.namedChildren.find(node => node.type === 'link_destination')\n              ?.text ??\n          text;\n      return html`<a\n        href=\"${destination}\"\n        target=\"_blank\"\n        @click=${this.onLinkClick}\n        contenteditable=${false}\n        >${text}</a\n      >`;\n    }\n\n    interface Result {\n      node?: Parser.SyntaxNode;\n      result: TemplateResult;\n    }\n    const results: Result[] = [];\n    const children = [...node.namedChildren];\n    while (index < node.endIndex) {\n      const child = children.shift();\n      if (child) {\n        if (index < child.startIndex) {\n          const text = node.text.substring(\n              index - node.startIndex, child.startIndex - node.startIndex);\n          results.push({result: html`${text}`});\n        }\n        index = child.endIndex;\n        results.push({\n          node: child,\n          result: html`<md-span\n            .node=${child}\n            .active=${this.active}\n          ></md-span>`,\n        });\n      } else {\n        const text = node.text.substring(\n            index - node.startIndex, node.endIndex - node.startIndex);\n        results.push({result: html`${text}`});\n        index = node.endIndex;\n      }\n    }\n    let nextId = -Number.MAX_SAFE_INTEGER;\n    const key = (result: Result) => {\n      if (!result.node) return nextId++;\n      return this.nodeIds!.get(result.node);\n    };\n    const content = repeat(results, key, item => {\n      return item.result;\n    });\n    return content;\n  }\n}\n\nclass NodeIds {\n  private idMap: Map<number, number> = new Map();\n  private nextId = 0;\n  get(node: Parser.SyntaxNode) {\n    return this.idMap.get(node.id)!;\n  }\n  migrate(oldNode: Parser.SyntaxNode|undefined, newNode: Parser.SyntaxNode) {\n    const posMap = new Map<number, number>();\n    function key(node: Parser.SyntaxNode) {\n      return node.startIndex;\n    }\n    for (const node of childNodes(oldNode)) {\n      posMap.set(key(node), this.idMap.get(node.id)!);\n    }\n    this.idMap = new Map();\n    for (const node of childNodes(newNode)) {\n      this.idMap.set(node.id, posMap.get(key(node)) ?? this.nextId++);\n    }\n    return this.idMap.size;\n  }\n}\n\nfunction* childNodes(node?: Parser.SyntaxNode) {\n  if (!node) return;\n  const next = (next: Parser.SyntaxNode|null) => {\n    if (next) node = next;\n    return !!next;\n  };\n  if (next(node.firstChild)) {\n    do {\n      yield node;\n    } while (next(node.nextSibling));\n  }\n}\n\nfunction isFormatting(node: Parser.SyntaxNode) {\n  return [\n    'block_continuation',\n    'list_marker_star',\n    'list_marker_minus',\n    'list_marker_dot',\n    'code_span_delimiter',\n    'fenced_code_block_delimiter',\n    'info_string',\n    'block_quote_marker',\n    'emphasis_delimiter',\n    'setext_h1_underline',\n  ].includes(node.type);\n}\n\ndeclare global {\n  interface Selection {\n    modify(\n        alter: 'move'|'extend', direction: 'forward'|'backward',\n        granularity: 'character'|'lineboundary'|'line'): void;\n  }\n  interface HTMLElementTagNameMap {\n    'md-inline': MarkdownInline;\n    'md-span': MarkdownSpan;\n  }\n}\n"]}