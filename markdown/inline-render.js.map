{"version":3,"file":"inline-render.js","sourceRoot":"","sources":["../../src/markdown/inline-render.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {contextProvided} from '../deps/lit-labs-context.js';\nimport {css, customElement, html, LitElement, property, query, queryAll, repeat, TemplateResult} from '../deps/lit.js';\nimport Parser from '../deps/tree-sitter.js';\n\nimport {HostContext, hostContext} from './host-context.js';\nimport {InlineViewModelNode, ViewModelNode} from './view-model.js';\n\nexport interface InlineInputPoint {\n  span?: MarkdownSpan;\n  index: number;\n}\n\nexport interface InlineInput {\n  inline: MarkdownInline;\n  node: ViewModelNode;\n  content: string;\n  inputEvent: InputEvent;\n  inputStart: InlineInputPoint;\n  inputEnd: InlineInputPoint;\n}\n\nexport interface InlineKeyDown {\n  inline: MarkdownInline;\n  node: ViewModelNode;\n  keyboardEvent: KeyboardEvent;\n  inputEvent: InputEvent;\n}\n\nexport interface InlineLinkClick {\n  type: string;\n  destination: string;\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    'inline-input': CustomEvent<InlineInput>;\n    'inline-keydown': CustomEvent<InlineInput>;\n    'inline-link-click': CustomEvent<InlineLinkClick>;\n  }\n}\n\n@customElement('md-inline')\nexport class MarkdownInline extends LitElement {\n  static override get styles() {\n    return [\n      css`\n        md-inline {\n          display: block;\n          outline: none;\n        }\n        md-inline[active] {\n          white-space: pre;\n          --focus-invalid: --;\n        }\n        md-inline[active] * {\n          white-space: pre-wrap;\n        }\n        md-span a,\n        md-span {\n          visibility: visible;\n          font-size: 16px;\n        }\n        md-span[type='backslash_escape']::first-letter {\n          font-size: 0;\n        }\n        md-span[type='link_destination'],\n        md-span[type='link_title'],\n        md-span[type='code_span_delimiter'],\n        md-span[type='emphasis_delimiter'] {\n          display: var(--focus-invalid, none);\n        }\n        md-span[type='inline_link'],\n        md-span[type='image'],\n        md-span[type='shortcut_link'] {\n          visibility: var(--focus-invalid, collapse);\n          font-size: var(--focus-invalid, 0);\n        }\n        md-span[type='shortcut_link'],\n        md-span[type='inline_link'] {\n          color: blue;\n          cursor: pointer;\n        }\n        md-span[type='emphasis'] {\n          font-style: italic;\n        }\n        md-span[type='strong_emphasis'] {\n          font-weight: bold;\n        }\n        md-span[type='strikethrough'] {\n          text-decoration: line-through;\n        }\n        md-span[type='code_span'] {\n          white-space: pre;\n          font-family: monospace;\n        }\n      `,\n    ];\n  }\n  constructor() {\n    super();\n    this.addEventListener('beforeinput', this.onBeforeInput, {capture: true});\n    this.addEventListener('keydown', this.onKeyDown, {capture: true});\n    this.addEventListener('pointerdown', this.onPointerDown);\n    this.addEventListener('pointerup', () => {\n      if (this.hasFocus) {\n        this.active = true;\n      }\n    });\n    this.addEventListener('focus', () => {\n      this.hasFocus = true;\n    });\n    this.addEventListener('blur', () => {\n      this.active = false;\n      this.hasFocus = false;\n    });\n  }\n  @contextProvided({context: hostContext, subscribe: true})\n  @property({attribute: false})\n  hostContext: HostContext|undefined;\n  @property({type: Object, reflect: false}) node: InlineViewModelNode|undefined;\n  @property({type: Boolean, reflect: true}) contenteditable = true;\n  @property({type: Boolean, reflect: true}) active = false;\n  @query('md-span') span!: MarkdownSpan;\n  hasFocus = false;\n\n  override render() {\n    if (!this.node) return;\n    return html`<md-span\n      .node=${this.node.viewModel.inlineTree!.rootNode}\n      .active=${this.active}\n    ></md-span>`;\n  }\n  override willUpdate(changedProperties: Map<string, unknown>) {\n    if (changedProperties.has('node')) {\n      const oldNode = changedProperties.get('node') as ViewModelNode;\n      this.removeObserver(oldNode);\n      this.addObserver(this.node);\n    }\n  }\n  override updated() {\n    this.maybeSetFocus();\n  }\n  async maybeSetFocus() {\n    if (this.hostContext?.focusNode !== this.node) return;\n    // Wait for the nested md-span (and all of the decendant md-spans to\n    // update).\n    await this.span.updateComplete;\n    if (this.hostContext?.focusNode !== this.node) return;\n    if (!this.isConnected) return;\n    const selection = (this.getRootNode()! as Document).getSelection()!;\n    const range = document.createRange();\n    range.setStart(this, 0);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    this.active = true;\n    let focusOffset = this.hostContext?.focusOffset;\n    if (focusOffset !== undefined) {\n      if (focusOffset < 0 || Object.is(focusOffset, -0)) {\n        let index = NaN;\n        let last = NaN;\n        do {\n          last = index;\n          selection.modify('move', 'forward', 'line');\n          ({\n            start: {index},\n          } = MarkdownInline.getSelectionRange(selection));\n        } while (index !== last);\n        selection.modify('move', 'backward', 'lineboundary');\n        focusOffset = -focusOffset;\n      }\n      if (focusOffset === Infinity) {\n        selection.modify('move', 'forward', 'lineboundary');\n      } else {\n        // TODO: Check for overrun first line, but note that this conflicts\n        // with the edit/setFocus case.\n        for (let i = 0; i < focusOffset; i++) {\n          selection.modify('move', 'forward', 'character');\n        }\n      }\n      this.scrollIntoView({\n        block: 'nearest',\n        inline: 'nearest',\n      });\n    }\n    // TODO: Avoid this by always maintaining accurate values?\n    setTimeout(() => {\n      this.hostContext!.focusNode = undefined;\n      this.hostContext!.focusOffset = undefined;\n    });\n  }\n  protected override createRenderRoot() {\n    return this;\n  }\n  static nodeOffsetToInputPoint(node: Node, offset: number): InlineInputPoint {\n    if (node instanceof MarkdownInline) {\n      return {index: 0};\n    }\n    let previous = node.previousSibling;\n    while (previous && previous.nodeType !== Node.ELEMENT_NODE) {\n      previous = previous.previousSibling;\n    }\n    let index: number;\n    if (previous) {\n      index = (previous as MarkdownSpan).node!.endIndex + offset;\n    } else {\n      index = (node.parentElement as MarkdownSpan).node!.startIndex + offset;\n    }\n    return {\n      span: node.parentElement as MarkdownSpan,\n      index,\n    };\n  }\n  static getSelectionRange(selection: Selection) {\n    const start = MarkdownInline.nodeOffsetToInputPoint(\n        selection.anchorNode!, selection.anchorOffset);\n    const end = MarkdownInline.nodeOffsetToInputPoint(\n        selection.focusNode!, selection.focusOffset);\n    return start.index <= end.index ? {start, end} : {start: end, end: start};\n  }\n  moveCaret(alter: 'move'|'extend', direction: 'backward'|'forward', granularity: 'line'|'character'|'word'): true|number {\n    const selection = (this.getRootNode()! as Document).getSelection()!;\n    const focusNode = selection.focusNode!;\n    const focusOffset = selection.focusOffset;\n    const initial = MarkdownInline.nodeOffsetToInputPoint(selection.focusNode!, selection.focusOffset);\n    const focus = document.createRange();\n    focus.setStart(selection.focusNode!, selection.focusOffset);\n    focus.collapse(true);\n    const anchor = document.createRange();\n    anchor.setStart(selection.anchorNode!, selection.anchorOffset);\n    anchor.collapse(true);\n\n    // Create a selection that spans the current line.\n    selection.removeAllRanges();\n    selection.addRange(focus);\n    selection.modify('move', 'backward', 'lineboundary');\n    selection.modify('extend', 'forward', 'lineboundary');\n    const line = MarkdownInline.getSelectionRange(selection);\n\n    // Find the end of the inline.\n    selection.modify('move', 'forward', 'documentboundary');\n    const end = MarkdownInline.nodeOffsetToInputPoint(selection.focusNode!, selection.focusOffset);\n\n    // Reset the selection to the initial state, then modify it based on the arguments.\n    selection.removeAllRanges();\n    selection.addRange(anchor);\n    selection.extend(focusNode, focusOffset);\n    selection.modify(alter, direction, granularity);\n    const result = MarkdownInline.nodeOffsetToInputPoint(selection.focusNode!, selection.focusOffset);\n\n    if (granularity === 'line') {\n      if (direction == 'backward') {\n        return result.index < line.start.index || initial.index - line.start.index;\n      } else {\n        return (result.index > line.end.index || result.index !== end.index && result.index == line.end.index) || initial.index - line.start.index;  \n      }\n    } else {\n      return result.index !== initial.index || (direction === 'backward' ? Infinity : 0);\n    }\n  }\n  getSelection() {\n    const selection: Selection =\n        (this.getRootNode()! as Document).getSelection()!;\n    if (!selection.focusNode) return;\n    return MarkdownInline.getSelectionRange(selection);\n  }\n  getCaretPosition() {\n    let {x, y, height} = (this.getRootNode()! as Document).getSelection()!.getRangeAt(0).getBoundingClientRect();\n    if (x === 0 && y === 0) {\n      ({x, y, height} = this.getBoundingClientRect());\n    }\n    return {x, y: y + height};\n  }\n  onKeyDown(e: KeyboardEvent) {\n    const inlineKeydown = {\n      inline: this,\n      node: this.node!,\n      keyboardEvent: e,\n    };\n    this.dispatchEvent(new CustomEvent('inline-keydown', {\n      detail: inlineKeydown,\n      bubbles: true,\n      composed: true,\n    }));\n  }\n  onBeforeInput(e: InputEvent) {\n    if (!this.node) return;\n    e.preventDefault();\n    const selection: Selection =\n        (this.getRootNode()! as Document).getSelection()!;\n    const {start: inputStart, end: inputEnd} =\n        MarkdownInline.getSelectionRange(selection);\n    const inlineInput: InlineInput = {\n      inline: this,\n      node: this.node!,\n      inputEvent: e,\n      inputStart,\n      inputEnd,\n      content: this.node.content,\n    };\n\n    this.dispatchEvent(new CustomEvent('inline-input', {\n      detail: inlineInput,\n      bubbles: true,\n      composed: true,\n    }));\n  }\n  onPointerDown(event: PointerEvent) {\n    this.hostContext?.clearSelection();\n  }\n  private readonly observer = (node: ViewModelNode) => {\n    if (node !== this.node) {\n      this.removeObserver(node);\n      return;\n    }\n    this.requestUpdate();\n  };\n  private addObserver(node: ViewModelNode|undefined) {\n    node?.viewModel.observe.add(this.observer);\n  }\n  private removeObserver(node: ViewModelNode|undefined) {\n    node?.viewModel.observe.remove(this.observer);\n  }\n}\n\n@customElement('md-span')\nexport class MarkdownSpan extends LitElement {\n  @property({type: Boolean, reflect: true}) active = false;\n  @property({type: Boolean, reflect: true}) formatting = false;\n  @property({type: String, reflect: true}) type = '';\n\n  @property({attribute: false}) node?: Parser.SyntaxNode;\n  @queryAll('md-span') spans!: NodeListOf<MarkdownSpan>;\n  nodeIds = new NodeIds();\n\n  constructor() {\n    super();\n    this.addEventListener('pointerdown', (e) => {\n      this.handlePointerDown(e);\n    });\n    this.addEventListener('click', (e) => {\n      this.handleClick(e);\n    });\n  }\n  override async performUpdate() {\n    await super.performUpdate();\n    await Promise.all(\n        Array.from(this.spans).map((span) => span.updateComplete));\n  }\n\n  override shouldUpdate(changed: Map<string, unknown>) {\n    let result = false;\n    if (changed.has('node')) {\n      const oldSyntaxNode =\n          changed.get('node') as | Parser.SyntaxNode | undefined;\n      const newSyntaxNode = this.node;\n      if (newSyntaxNode &&\n          (!oldSyntaxNode || oldSyntaxNode.id !== newSyntaxNode.id)) {\n        result = true;\n        this.nodeIds?.migrate(oldSyntaxNode, newSyntaxNode);\n      }\n    }\n    if (changed.has('active')) {\n      result = true;\n    }\n    return result;\n  }\n  protected override createRenderRoot() {\n    return this;\n  }\n  private handlePointerDown(event: Event) {\n    if (this.active) return;\n    const node = this.node;\n    if (!node) return;\n    if (node.type === 'inline_link' || node.type === 'shortcut_link') {\n      // Prevent focus before link click.\n      event.preventDefault();\n    }\n  }\n  private handleClick(event: Event) {\n    if (this.active) return;\n    const node = this.node;\n    if (!node) return;\n    if (node.type !== 'inline_link' && node.type !== 'shortcut_link') return;\n    event.preventDefault();\n    const text =\n        node.namedChildren.find((node) => node.type === 'link_text')?.text ??\n        '';\n    const destination =\n        node.namedChildren.find((node) => node.type === 'link_destination')\n            ?.text ??\n        text;\n    const inlineLinkClick: InlineLinkClick = {\n      type: this.node!.type,\n      destination,\n    };\n    this.dispatchEvent(new CustomEvent('inline-link-click', {\n      detail: inlineLinkClick,\n      bubbles: true,\n      composed: true,\n    }));\n  }\n  override render() {\n    const node = this.node;\n    if (!node) return html``;\n    if (typeof node === 'string') {\n      this.type = '';\n      return html`${node}`;\n    }\n    this.type = node.type;\n    this.formatting = isFormatting(node);\n    let index = node.startIndex;\n    interface Result {\n      node?: Parser.SyntaxNode;\n      result: TemplateResult;\n    }\n    const results: Result[] = [];\n    const children = [...node.namedChildren];\n    while (index < node.endIndex) {\n      const child = children.shift();\n      if (child) {\n        if (index < child.startIndex) {\n          const text = node.text.substring(\n              index - node.startIndex, child.startIndex - node.startIndex);\n          results.push({result: html`${text}`});\n        }\n        index = child.endIndex;\n        results.push({\n          node: child,\n          result: html`<md-span\n            .node=${child}\n            .active=${this.active}\n          ></md-span>`,\n        });\n      } else {\n        const text = node.text.substring(\n            index - node.startIndex, node.endIndex - node.startIndex);\n        results.push({result: html`${text}`});\n        index = node.endIndex;\n      }\n    }\n    let nextId = -Number.MAX_SAFE_INTEGER;\n    const key = (result: Result) => {\n      if (!result.node) return nextId++;\n      return this.nodeIds!.get(result.node);\n    };\n    const content = repeat(results, key, (item) => {\n      return item.result;\n    });\n    return content;\n  }\n}\n\nclass NodeIds {\n  private idMap: Map<number, number> = new Map();\n  private nextId = 0;\n  get(node: Parser.SyntaxNode) {\n    return this.idMap.get(node.id)!;\n  }\n  migrate(oldNode: Parser.SyntaxNode|undefined, newNode: Parser.SyntaxNode) {\n    const posMap = new Map<number, number>();\n    function key(node: Parser.SyntaxNode) {\n      return node.startIndex;\n    }\n    for (const node of childNodes(oldNode)) {\n      posMap.set(key(node), this.idMap.get(node.id)!);\n    }\n    this.idMap = new Map();\n    for (const node of childNodes(newNode)) {\n      this.idMap.set(node.id, posMap.get(key(node)) ?? this.nextId++);\n    }\n    return this.idMap.size;\n  }\n}\n\nfunction* childNodes(node?: Parser.SyntaxNode) {\n  if (!node) return;\n  const next = (next: Parser.SyntaxNode|null) => {\n    if (next) node = next;\n    return !!next;\n  };\n  if (next(node.firstChild)) {\n    do {\n      yield node;\n    } while (next(node.nextSibling));\n  }\n}\n\nfunction isFormatting(node: Parser.SyntaxNode) {\n  return [\n    'block_continuation',\n    'list_marker_star',\n    'list_marker_minus',\n    'list_marker_dot',\n    'code_span_delimiter',\n    'fenced_code_block_delimiter',\n    'info_string',\n    'block_quote_marker',\n    'emphasis_delimiter',\n    'setext_h1_underline',\n  ].includes(node.type);\n}\n\ndeclare global {\n  interface Selection {\n    modify(\n        alter: 'move'|'extend', direction: 'forward'|'backward',\n        granularity: 'character'|'lineboundary'|'line'): void;\n  }\n  interface HTMLElementTagNameMap {\n    'md-inline': MarkdownInline;\n    'md-span': MarkdownSpan;\n  }\n}\n"]}