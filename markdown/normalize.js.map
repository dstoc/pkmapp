{"version":3,"file":"normalize.js","sourceRoot":"","sources":["../../src/markdown/normalize.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {assert} from '../asserts.js';\n\nimport {SectionNode} from './node.js';\nimport {children, dfs} from './view-model-util.js';\nimport {MarkdownTree, ViewModelNode} from './view-model.js';\n\nfunction moveTrailingNodesIntoSections(tree: MarkdownTree) {\n  for (const node of dfs(tree.root)) {\n    let section: SectionNode&ViewModelNode|undefined;\n    for (const child of children(node)) {\n      if (child.type === 'section') {\n        section = child;\n      } else if (section) {\n        child.viewModel.insertBefore(section);\n      }\n    }\n  }\n}\n\nfunction normalizeContiguousSections(\n    sections: Array<SectionNode&ViewModelNode>) {\n  const activeSections: Array<SectionNode&ViewModelNode> = [];\n  function activeSection() {\n    return activeSections[activeSections.length - 1];\n  }\n  for (const section of sections) {\n    if (activeSections.length) {\n      while (section.marker.length < activeSection().marker.length &&\n             activeSections.length > 1) {\n        activeSections.pop();\n      }\n      if (section.marker.length <= activeSection().marker.length) {\n        if (section.viewModel.previousSibling !== activeSection()) {\n          section.viewModel.insertBefore(\n              activeSection().viewModel.parent!,\n              activeSection().viewModel.nextSibling);\n        }\n        activeSections.pop();\n      } else {\n        assert(section.marker.length > activeSection().marker.length);\n        if (section.viewModel.parent !== activeSection()) {\n          // ensure section is first section child of activeSection\n          let next: ViewModelNode|undefined;\n          for (const child of children(activeSection())) {\n            if (child.type === 'section') {\n              next = child;\n              break;\n            }\n          }\n          section.viewModel.insertBefore(activeSection(), next);\n        }\n      }\n    }\n    activeSections.push(section);\n  }\n}\n\nfunction normalizeSections(tree: MarkdownTree) {\n  moveTrailingNodesIntoSections(tree);\n  const sections: Array<SectionNode&ViewModelNode> = [];\n  for (const node of dfs(tree.root)) {\n    if (node.type !== 'section') continue;\n    if (node.viewModel.parent?.type !== 'section' &&\n        (!node.viewModel.previousSibling ||\n         node.viewModel.previousSibling.type !== 'section')) {\n      // Finished traversing a contiguous sequence of sections.\n      normalizeContiguousSections(sections);\n      sections.length = 0;\n    }\n    sections.push(node);\n  }\n  normalizeContiguousSections(sections);\n}\n\nexport function normalizeTree(tree: MarkdownTree) {\n  const emptyPredicate = (node?: ViewModelNode) => node &&\n      node.viewModel.parent && !node.viewModel.firstChild &&\n      ['list-item', 'list', 'block-quote'].includes(node.type);\n  for (const empty of [...dfs(tree.root)].filter(emptyPredicate)) {\n    let node: ViewModelNode|undefined = empty;\n    while (node) {\n      const parent: ViewModelNode|undefined = node.viewModel.parent;\n      node.viewModel.remove();\n      node = emptyPredicate(parent) ? parent : undefined;\n    }\n  }\n  normalizeSections(tree);\n\n  for (const node of dfs(tree.root)) {\n    if (node.type === 'list') {\n      while (node.viewModel.nextSibling?.type === 'list') {\n        const next = node.viewModel.nextSibling;\n        while (next.viewModel.firstChild) {\n          next.viewModel.firstChild.viewModel.insertBefore(node);\n        }\n        next.viewModel.remove();\n      }\n    }\n  }\n}\n"]}