{"version":3,"file":"block-render.js","sourceRoot":"","sources":["../../src/markdown/block-render.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  state,\n  css,\n  customElement,\n  html,\n  LitElement,\n  property,\n} from '../deps/lit.js';\n\nimport {MarkdownInline} from './inline-render.js';\nimport {ViewModelNode} from './view-model.js';\nimport './transclusion.js';\nimport {hostContext, HostContext} from './host-context.js';\nimport {contextProvider, contextProvided} from '../deps/lit-labs-context.js';\n\n@customElement('md-block')\nexport class MarkdownBlock extends LitElement {\n  @property({type: Boolean, reflect: true}) selected?: boolean;\n  @property({type: String, reflect: true}) checked?: boolean;\n  @property({type: Boolean, reflect: true}) root?: boolean;\n  @property({type: String, reflect: true}) type = '';\n  @property({attribute: false}) node: ViewModelNode | undefined;\n  @contextProvided({context: hostContext, subscribe: true})\n  @property({attribute: false})\n  hostContext: HostContext | undefined;\n  constructor() {\n    super();\n    this.addEventListener('click', (e) => this.handleClick(e));\n  }\n  override connectedCallback(): void {\n    super.connectedCallback();\n    this.addObserver(this.node);\n  }\n  override disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.removeObserver(this.node);\n  }\n  override willUpdate(changedProperties: Map<string, unknown>) {\n    if (changedProperties.has('node')) {\n      const oldNode = changedProperties.get('node') as ViewModelNode;\n      this.removeObserver(oldNode);\n      if (this.isConnected) {\n        this.addObserver(this.node);\n      }\n    }\n  }\n  override render() {\n    this.selected = this.hostContext?.selection.has(this.node!) ?? false;\n    const node = this.node;\n    if (!node) return;\n    this.type = node.type;\n    if (node.type === 'list-item') {\n      this.checked = node.checked;\n    }\n    if (node.type === 'code-block' && node.info === 'tc') {\n      return html`<md-transclusion .node=${node}></md-transclusion>`;\n    }\n    return html`${node.type === 'paragraph' ||\n    node.type === 'code-block' ||\n    node.type === 'section'\n      ? html`<md-inline .node=${node}></md-inline>`\n      : ''}\n    ${node.children?.map((node) => html`<md-block .node=${node}></md-block>`)} `;\n  }\n  protected override createRenderRoot() {\n    return this;\n  }\n  private handleClick(e: Event) {\n    const node = this.node;\n    if (!node) return;\n    if (node.type === 'list-item') {\n      if (e.target !== this) return;\n      e.preventDefault();\n      let newValue;\n      switch (node.checked) {\n        case true:\n          newValue = undefined;\n          break;\n        case false:\n          newValue = true;\n          break;\n        case undefined:\n          newValue = false;\n          break;\n      }\n      node.viewModel.updateChecked(newValue);\n    }\n  }\n  private readonly observer = (node: ViewModelNode) => {\n    if (node !== this.node) {\n      this.removeObserver(node);\n      return;\n    }\n    this.requestUpdate();\n  };\n  private addObserver(node: ViewModelNode | undefined) {\n    node?.viewModel.observe.add(this.observer);\n  }\n  private removeObserver(node: ViewModelNode | undefined) {\n    node?.viewModel.observe.remove(this.observer);\n  }\n}\n\n@customElement('md-block-render')\nexport class MarkdownRenderer extends LitElement {\n  static override get styles() {\n    return [\n      ...MarkdownInline.styles,\n      css`\n        md-block {\n          display: block;\n          margin-block-start: 1em;\n          margin-block-end: 1em;\n        }\n        md-block[root] {\n          margin-block: 0;\n        }\n        md-block[type='list'] {\n          list-style-type: disc;\n          padding-inline-start: 20px;\n        }\n        md-block[type='list-item']:not([root]) {\n          display: list-item;\n          white-space: initial;\n          margin-block: 0;\n        }\n        md-block[type='list-item'][checked='true']::marker {\n          content: '🗹 ';\n        }\n        md-block[type='list-item'][checked='false']::marker {\n          content: '☐ ';\n        }\n        md-block[type='code-block'] md-inline {\n          font-family: monospace;\n          white-space: pre-wrap;\n        }\n        md-block[type='section'] > md-inline {\n          font-weight: bold;\n        }\n        md-block + md-block[type='list'] {\n          margin-block-start: -0.5em !important;\n        }\n        md-block[type='list-item']\n          > md-block[type='paragraph']\n          + md-block[type='list'] {\n          margin-block-start: -1em !important;\n        }\n        md-block[type='section'] > md-block:nth-child(2) {\n          margin-block-start: 0.5em !important;\n        }\n        md-block > md-block:first-child {\n          margin-block-start: 0em;\n        }\n        md-block > md-block:last-child {\n          margin-block-end: 0em;\n        }\n        md-block[type='list'] + md-block {\n          margin-block-start: 0em;\n        }\n        md-block[selected]:not([type='section']),\n        md-block[selected][type='section'] > md-inline {\n          background: var(--md-block-selection-color);\n          caret-color: transparent;\n        }\n      `,\n      // Overridable styles.\n      css`\n        md-span[type='code_span'] {\n          font-family: var(--md-code-font-family);\n          border-radius: 3px;\n          padding: 3px;\n          background: var(--md-code-block-bgcolor);\n        }\n        md-block[type='block-quote'] {\n          background: var(--md-block-quote-bgcolor);\n          border-left: 10px solid var(--md-accent-color);\n          padding: 10px;\n          border-radius: 10px;\n        }\n        md-block[type='code-block'] md-inline {\n          font-family: var(--md-code-font-family);\n          background: var(--md-code-block-bgcolor);\n          padding: 10px;\n          border-radius: 10px;\n        }\n        a,\n        md-span[type='shortcut_link'],\n        md-span[type='uri_autolink'],\n        md-span[type='inline_link'] {\n          color: var(--md-accent-color);\n        }\n        md-span[type='shortcut_link'] a,\n        md-span[type='uri_autolink'],\n        md-span[type='inline_link'] a {\n          color: var(--md-accent-color);\n          text-decoration: none;\n        }\n        md-span[type='tag'] {\n          border-radius: 3px;\n          padding: 3px;\n          background: var(--md-tag-bgcolor);\n        }\n      `,\n    ];\n  }\n\n  @contextProvider({context: hostContext})\n  @state()\n  readonly hostContext = new HostContext();\n\n  @property({type: Object, reflect: false}) block!: ViewModelNode;\n  override render() {\n    this.hostContext.root = this.block;\n    if (!this.block) return html``;\n    return html`<md-block .node=${this.block} ?root=${true}></md-block>`;\n  }\n  getInlineSelection(): {\n    inline?: MarkdownInline;\n    startIndex?: number;\n    endIndex?: number;\n  } {\n    let active = this.shadowRoot!.activeElement;\n    while (true) {\n      if (!active || active instanceof MarkdownInline) {\n        const selection = active?.getSelection();\n        return {\n          inline: active || undefined,\n          startIndex: selection?.start.index,\n          endIndex: selection?.end.index,\n        };\n      } else {\n        active = active.shadowRoot?.activeElement ?? null;\n      }\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-block': MarkdownBlock;\n    'md-block-render': MarkdownRenderer;\n  }\n}\n"]}