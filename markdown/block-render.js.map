{"version":3,"file":"block-render.js","sourceRoot":"","sources":["../../src/markdown/block-render.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {assert} from '../asserts.js';\nimport {css, customElement, html, LitElement, property} from '../deps/lit.js';\n\nimport {MarkdownInline} from './inline-render.js';\nimport {ViewModelNode} from './view-model.js';\n\n@customElement('md-block')\nexport class MarkdownBlock extends LitElement {\n  @property({type: String, reflect: true}) checked?: boolean;\n  @property({type: String, reflect: true}) type = '';\n  @property({attribute: false}) node: ViewModelNode|undefined;\n  constructor() {\n    super();\n    this.addEventListener('click', (e) => this.handleClick(e));\n  }\n  override connectedCallback(): void {\n    super.connectedCallback();\n    this.addObserver(this.node);\n  }\n  override disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.removeObserver(this.node);\n  }\n  override willUpdate(changedProperties: Map<string, unknown>) {\n    if (changedProperties.has('node')) {\n      const oldNode = changedProperties.get('node') as ViewModelNode;\n      this.removeObserver(oldNode);\n      if (this.isConnected) {\n        this.addObserver(this.node);\n      }\n    }\n  }\n  override render() {\n    const node = this.node;\n    if (!node) return;\n    this.type = node.type;\n    if (node.type === 'list-item') {\n      this.checked = node.checked;\n    }\n    return html`${\n        (node.type === 'paragraph' || node.type === 'code-block' ||\n         node.type === 'section') ?\n            html`<md-inline .node=${node}></md-inline>` :\n            ''}\n        ${\n        node.children?.map((node) => html`<md-block .node=${node}></md-block>`)}\n    `;\n  }\n  protected override createRenderRoot() {\n    return this;\n  }\n  private handleClick(e: Event) {\n    const node = this.node;\n    if (!node) return;\n    if (node.type === 'list-item') {\n      if (e.target !== this) return;\n      e.preventDefault();\n      let newValue;\n      switch (node.checked) {\n        case true:\n          newValue = undefined;\n          break;\n        case false:\n          newValue = true;\n          break;\n        case undefined:\n          newValue = false;\n          break;\n      }\n      node.viewModel.updateChecked(newValue);\n    }\n  }\n  private readonly observer = (node: ViewModelNode) => {\n    if (node !== this.node) {\n      this.removeObserver(node);\n      return;\n    }\n    this.requestUpdate();\n  };\n  private addObserver(node: ViewModelNode|undefined) {\n    node?.viewModel.observe.add(this.observer);\n  }\n  private removeObserver(node: ViewModelNode|undefined) {\n    node?.viewModel.observe.remove(this.observer);\n  }\n}\n\n@customElement('md-block-render')\nexport class MarkdownRenderer extends LitElement {\n  static override get styles() {\n    return [\n      ...MarkdownInline.styles,\n      css`\n        md-block {\n          display: block;\n          margin-block-start: 1em;\n          margin-block-end: 1em;\n        }\n        md-block[type='list'] {\n          list-style-type: disc;\n          padding-inline-start: 16px;\n        }\n        md-block[type='list-item'] {\n          display: list-item;\n          white-space: initial;\n          margin-block: 0;\n        }\n        md-block[type='list-item'][checked='true']::marker {\n          content: '🗹 ';\n        }\n        md-block[type='list-item'][checked='false']::marker {\n          content: '☐ ';\n        }\n        md-block[type='code-block'] md-inline {\n          font-family: monospace;\n          white-space: pre-wrap;\n        }\n        md-block[type='section'] > md-inline {\n          font-weight: bold;\n        }\n        md-block + md-block[type='list'] {\n          margin-block-start: -1em !important;\n        }\n        md-block > md-block:first-child {\n          margin-block-start: 0em;\n        }\n        md-block > md-block:last-child {\n          margin-block-end: 0em;\n        }\n        md-block[type='block-quote'] {\n        }\n        md-block[type='list'] + md-block {\n          margin-block-start: 0em;\n        }\n      `,\n      // Overridable styles.\n      css`\n        md-span[type='code_span'] {\n          font-family: var(--md-code-font-family);\n          border-radius: 3px;\n          padding: 3px;\n          background: var(--md-code-block-bgcolor);\n        }\n        md-block[type='block-quote'] {\n          background: var(--md-block-quote-bgcolor);\n          border-left: 10px solid var(--md-accent-color);\n          padding: 10px;\n          border-radius: 10px;\n        }\n        md-block[type='code-block'] md-inline {\n          font-family: var(--md-code-font-family);\n          background: var(--md-code-block-bgcolor);\n          padding: 10px;\n          border-radius: 10px;\n        }\n        md-span[type='shortcut_link'],\n        md-span[type='inline_link'] {\n          color: var(--md-accent-color);\n        }\n        md-span[type='shortcut_link'] a,\n        md-span[type='inline_link'] a {\n          color: var(--md-accent-color);\n          text-decoration: none;\n        }\n      `,\n    ];\n  }\n\n  @property({type: Object, reflect: false}) block!: ViewModelNode;\n  override render() {\n    if (!this.block) return html``;\n    return html`<md-block .node=${this.block}></md-block>`;\n  }\n  getInlineSelection() {\n    const inline = this.shadowRoot!.activeElement;\n    assert(!inline || inline instanceof MarkdownInline);\n    const selection = inline?.getSelection();\n    return {\n      node: inline?.node,\n      startIndex: selection?.start.index,\n      endIndex: selection?.end.index,\n    };\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-block': MarkdownBlock;\n    'md-block-render': MarkdownRenderer;\n  }\n}\n"]}