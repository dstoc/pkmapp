{"version":3,"file":"transclusion.js","sourceRoot":"","sources":["../../src/markdown/transclusion.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  query,\n  customElement,\n  html,\n  css,\n  state,\n  LitElement,\n  property,\n} from '../deps/lit.js';\n\nimport {MarkdownRenderer} from './block-render.js';\nimport {ViewModelNode} from './view-model.js';\nimport {CodeBlockNode} from './node.js';\nimport {Library} from '../library.js';\nimport {libraryContext} from '../app-context.js';\nimport './block-render.js';\nimport {contextProvided} from '../deps/lit-labs-context.js';\nimport {HostContext, hostContext} from './host-context.js';\nimport {findNextEditable, findFinalEditable} from './view-model-util.js';\n\n@customElement('md-transclusion')\nexport class MarkdownTransclusion extends LitElement {\n  @property({attribute: false}) node:\n    | (ViewModelNode & CodeBlockNode)\n    | undefined;\n  @contextProvided({context: libraryContext, subscribe: true})\n  @state()\n  library!: Library;\n\n  @contextProvided({context: hostContext, subscribe: true})\n  @property({attribute: false})\n  hostContext: HostContext | undefined;\n\n  @state()\n  root: ViewModelNode | undefined;\n\n  @query('md-block-render') private markdownRenderer!: MarkdownRenderer;\n\n  override update(changedProperties: Map<string, any>) {\n    super.update(changedProperties);\n    if (changedProperties.has('node')) {\n      this.root = undefined;\n      if (this.node) this.load(this.node.content.trim());\n    }\n  }\n  override render() {\n    return this.root\n      ? html`\n          â®´ ${this.node?.content.trim()}\n          <md-block-render .block=${this.root}></md-block-render>\n        `\n      : '';\n  }\n  static override get styles() {\n    return css`\n      :host {\n        display: block;\n        background: var(--md-code-block-bgcolor);\n        padding: 10px;\n        border-radius: 10px;\n      }\n    `;\n  }\n  async load(name: string) {\n    // TODO: disambiguate if there's more than one result\n    const [{root}] = await this.library.findAll(name);\n    this.root = root;\n  }\n  maybeUpdateFocus() {\n    if (!this.isConnected) return;\n    if (!this.hostContext) return;\n    if (!this.root) return;\n    if (this.hostContext.focusNode !== this.node) return;\n    const node =\n      (this.hostContext.focusOffset ?? -1) >= 0\n        ? findNextEditable(this.root, this.root, true)\n        : findFinalEditable(this.root, true);\n    this.markdownRenderer.hostContext.focusNode = node || undefined;\n    this.markdownRenderer.hostContext.focusOffset =\n      this.hostContext.focusOffset;\n    this.hostContext.focusNode = undefined;\n    this.hostContext.focusOffset = undefined;\n    node?.viewModel.observe.notify();\n  }\n  override connectedCallback() {\n    super.connectedCallback();\n    this.addObserver(this.node);\n  }\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeObserver(this.node);\n  }\n  override willUpdate(changedProperties: Map<string, unknown>) {\n    if (changedProperties.has('node')) {\n      const oldNode = changedProperties.get('node') as ViewModelNode;\n      this.removeObserver(oldNode);\n      this.addObserver(this.node);\n    }\n  }\n  private readonly observer = () => {\n    this.maybeUpdateFocus();\n  };\n  private addObserver(node: ViewModelNode | undefined) {\n    node?.viewModel.observe.add(this.observer);\n  }\n  private removeObserver(node: ViewModelNode | undefined) {\n    node?.viewModel.observe.remove(this.observer);\n  }\n}\n\nexport function getContainingTransclusion(element: Element) {\n  const renderShadow = element.getRootNode();\n  if (!(renderShadow instanceof ShadowRoot)) return;\n  const renderHost = renderShadow.host;\n  if (!(renderHost instanceof MarkdownRenderer)) return;\n  const shadow = renderHost.getRootNode();\n  if (!(shadow instanceof ShadowRoot)) return;\n  const transclusion = shadow.host;\n  if (!(transclusion instanceof MarkdownTransclusion)) return;\n  return transclusion;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-transclusion': MarkdownTransclusion;\n  }\n}\n"]}