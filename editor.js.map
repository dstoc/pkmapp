{"version":3,"file":"editor.js","sourceRoot":"","sources":["../src/editor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport './markdown/block-render.js';\nimport './autocomplete.js';\nimport './title.js';\n\nimport {libraryContext} from './app-context.js';\nimport {assert, cast} from './asserts.js';\nimport {Command, CommandBundle, SimpleCommandBundle} from './command-palette.js';\nimport {contextProvided} from './deps/lit-labs-context.js';\nimport {css, customElement, html, LitElement, property, query, state} from './deps/lit.js';\nimport {Document, Library} from './library.js';\nimport {parseBlocks} from './markdown/block-parser.js';\nimport {MarkdownRenderer} from './markdown/block-render.js';\nimport {serializeToString} from './markdown/block-serializer.js';\nimport {HostContext, focusNode} from './markdown/host-context.js';\nimport {MarkdownInline, InlineInput, InlineKeyDown, InlineLinkClick} from './markdown/inline-render.js';\nimport {InlineNode, MarkdownNode, ParagraphNode} from './markdown/node.js';\nimport {normalizeTree} from './markdown/normalize.js';\nimport {ancestors, children, findAncestor, findFinalEditable, findNextEditable, findPreviousEditable, reverseDfs, swapNodes} from './markdown/view-model-util.js';\nimport {InlineEdit, InlineViewModel, InlineViewModelNode, ViewModelNode} from './markdown/view-model.js';\nimport {Observer, Observers} from './observe.js';\nimport {getContainingTransclusion} from './markdown/transclusion.js';\nimport {Autocomplete} from './autocomplete.js';\nimport {maybeEditBlockSelectionIndent, editInlineIndent} from './indent-util.js';\nimport {getBlockSelectionTarget, maybeRemoveSelectedNodes, maybeRemoveSelectedNodesIn} from './block-selection-util.js';\nimport {getLogicalContainingBlock} from './block-util.js';\nimport {blockPreview, blockIcon, BlockCommandBundle} from './block-command-bundle.js';\n\nexport interface EditorNavigation {\n  kind: 'navigate'|'replace';\n  document: Document;\n  root: ViewModelNode;\n}\n\n@customElement('pkm-editor')\nexport class Editor extends LitElement {\n  defaultName?: string;\n  @property({type: String, reflect: true})\n  status: 'loading'|'loaded'|'error'|undefined;\n  @state() private document?: Document;\n  @state() private root?: ViewModelNode;\n  private name?: string;\n  @property({type: Boolean, reflect: true}) dirty = false;\n  @contextProvided({context: libraryContext, subscribe: true})\n  @state()\n  library!: Library;\n  @query('md-block-render') private markdownRenderer!: MarkdownRenderer;\n  @query('pkm-autocomplete') private autocomplete!: Autocomplete;\n  private observers = new Observers(new Observer(\n      () => this.document?.observe, (t, o) => t?.add(o), (t, o) => t?.remove(o),\n      () => this.requestUpdate()));\n  static override get styles() {\n    return [\n      css`\n        #status {\n          position: absolute;\n        }\n        #content {\n          display: flex;\n          justify-content: center;\n          flex-grow: 1;\n        }\n        md-block-render {\n          width: 700px;\n        }\n        pkm-title {\n          display: block;\n          position: sticky;\n          top: 0;\n          padding-bottom: 0.5em;\n          background: var(--root-background-color);\n        }\n      `,\n    ];\n  }\n  constructor() {\n    super();\n  }\n  override render() {\n    this.observers.update();\n    this.dirty = this.document?.dirty ?? false;\n    return html`\n    <div id=status>${this.document?.dirty ? '💽' : ''}</div>\n    <pkm-title\n      .node=${this.root}\n      @title-item-click=${this.onTitleItemClick}></pkm-title>\n    <div id=content>\n    <md-block-render\n      .block=${this.root}\n      @inline-input=${this.onInlineInput}\n      @inline-link-click=${this.onInlineLinkClick}\n      @inline-keydown=${this.onInlineKeyDown}></md-block-render>\n    </div>\n    <pkm-autocomplete></pkm-autocomplete>`;\n  }\n  override updated() {\n    if (this.name === undefined || this.name === this.document?.name) return;\n    this.name = this.document?.name;\n    this.dispatchEvent(new CustomEvent('editor-navigate', {\n      detail: {\n        kind: 'replace',\n        document: this.document,\n        root: this.root,\n      },\n      bubbles: true,\n      composed: true,\n    }));\n  }\n  override async connectedCallback() {\n    super.connectedCallback();\n    await this.updateComplete;\n    if (this.defaultName !== undefined) {\n      await this.navigateByName(this.defaultName, true);\n    }\n  }\n  async createAndNavigateByName(name: string, fireEvent = false) {\n    const document = await this.library.newDocument(name);\n    this.navigate(document, document.tree.root, fireEvent);\n  }\n  async navigateByName(name: string, fireEvent = false) {\n    const old = {\n      status: this.status,\n      document: this.document,\n      root: this.root,\n      name: this.name,\n    };\n    this.status = 'loading';\n    this.document = undefined;\n    this.root = undefined;\n    this.name = undefined;\n    try {\n      const results = await this.library.findAll(name);\n      if (results.length === 1) {\n        const [{document, root}] = results;\n        if (this.document === document && this.root === root) {\n          Object.assign(this, old);\n          return;\n        }\n        this.navigate(document, root, fireEvent);\n      } else if (results.length > 1) {\n        Object.assign(this, old);\n        this.dispatchEvent(new CustomEvent('editor-commands', {\n          detail: new SimpleCommandBundle(`Which \"${name}\"?`, results.map(({document, root}) => ({\n            description: document.name,\n            execute: async () => void this.navigate(document, root, fireEvent),\n            icon: blockIcon({root}),\n            preview: () => blockPreview({root}),\n          }))),\n          bubbles: true,\n          composed: true,\n        }));\n      } else {\n        Object.assign(this, old);\n        this.dispatchEvent(new CustomEvent('editor-commands', {\n          detail: new SimpleCommandBundle(`\"${name}\" does not exist, create it?`, [\n            {\n              description: 'Yes',\n              execute: async () => void this.createAndNavigateByName(name, fireEvent),\n            },\n            {\n              description: 'No',\n              execute: async () => void 0,\n            }\n          ]),\n          bubbles: true,\n          composed: true,\n        }));\n      }\n    } catch (e) {\n      this.status = 'error';\n      console.error(e);\n    }\n  }\n  navigate(document: Document, root: ViewModelNode, fireEvent = false) {\n    if (this.document === document && this.root === root) {\n      if (this.status === 'loading') this.status = 'loaded';\n      return;\n    }\n    assert(document.tree === root.viewModel.tree);\n    assert(root.viewModel.connected);\n    this.document = document;\n    this.root = root;\n    this.name = this.document.name;\n    this.status = 'loaded';\n    const node = findNextEditable(this.root, this.root);\n    if (node) {\n      focusNode(this.markdownRenderer.hostContext, node, 0);\n    }\n    if (fireEvent) this.dispatchEvent(new CustomEvent('editor-navigate', {\n      detail: {\n        document,\n        root,\n      },\n      bubbles: true,\n      composed: true,\n    }));\n  }\n  onInlineLinkClick({\n    detail: {destination},\n  }: CustomEvent<InlineLinkClick>) {\n    this.navigateByName(destination, true);\n  }\n  onTitleItemClick({detail}: CustomEvent) {\n    this.root = detail;\n  }\n  onInlineKeyDown(event: CustomEvent<InlineKeyDown>) {\n    const {detail: {inline, node, keyboardEvent}} = event;\n    const hostContext = cast(inline.hostContext);\n    const finishEditing = node.viewModel.tree.edit();\n    try {\n      assert(inline.node);\n      if (this.autocomplete.onInlineKeyDown(event)) {\n        return;\n      } else if (['ArrowUp', 'ArrowLeft', 'ArrowDown', 'ArrowRight'].includes(keyboardEvent.key)) {\n        keyboardEvent.preventDefault();\n        const direction = ['ArrowUp', 'ArrowLeft'].includes(keyboardEvent.key) ? 'backward' : 'forward';\n        const alter = keyboardEvent.shiftKey ? 'extend' : 'move';\n        const granularity = ['ArrowUp', 'ArrowDown'].includes(keyboardEvent.key) ? 'line' : keyboardEvent.ctrlKey ? 'word' : 'character';\n        const result = hostContext.hasSelection ? 0 : inline.moveCaret(alter, direction, granularity);\n        if (result === true) {\n          hostContext.clearSelection();\n        } else {\n          function updateFocus(element: Element&{hostContext?: HostContext}, node: ViewModelNode, offset: number) {\n            // Retarget if there's any containing transclusion that has a selection.\n            const target = getBlockSelectionTarget(element);\n            if (target) {\n              node = cast(target.node);\n              element = target;\n            }\n            if (alter !== 'extend') {\n              cast(element.hostContext).clearSelection();\n            }\n            while (true) {\n              const root = cast(cast(element.hostContext).root);\n              const next = direction === 'backward' ? findPreviousEditable(node, root) : findNextEditable(node, root);\n              if (next) {\n                focusNode(cast(element.hostContext), next, direction === 'backward' ? -offset : offset);\n                return {node, element, next};\n              } else {\n                const transclusion = getContainingTransclusion(element);\n                if (!transclusion || alter === 'extend') return {};\n                element = transclusion;\n                node = cast(transclusion.node);\n              }\n            }\n          }\n          const {node: updatedNode, element, next} = updateFocus(inline, node, result);\n          if (next && alter === 'extend') {\n            const hostContext = cast(element.hostContext);\n            if (hostContext.selectionAnchor) {\n              hostContext.extendSelection(updatedNode, next);\n            } else {\n              this.autocomplete.abort();\n              hostContext.setSelection(updatedNode, next);\n            }\n          }\n        }\n      } else if (keyboardEvent.key === 'Tab') {\n        keyboardEvent.preventDefault();\n        const mode = keyboardEvent.shiftKey ? 'unindent' : 'indent';\n        if (maybeEditBlockSelectionIndent(inline, mode)) return;\n        editInlineIndent(inline, mode);\n      } else if (keyboardEvent.key === 'a' && keyboardEvent.ctrlKey) {\n        keyboardEvent.preventDefault();\n        if (!hostContext.hasSelection) {\n          this.autocomplete.abort();\n          hostContext.setSelection(node, node);\n        }\n      } else if (keyboardEvent.key === 'c' && keyboardEvent.ctrlKey) {\n        const {hostContext} = getBlockSelectionTarget(inline) ?? {};\n        if (!hostContext) return;\n        keyboardEvent.preventDefault();\n        copyMarkdownToClipboard(serializeSelection(hostContext));\n      } else if (keyboardEvent.key === 'x' && keyboardEvent.ctrlKey) {\n        const {hostContext} = getBlockSelectionTarget(inline) ?? {};\n        if (!hostContext) return;\n        keyboardEvent.preventDefault();\n        copyMarkdownToClipboard(serializeSelection(hostContext));\n        maybeRemoveSelectedNodesIn(hostContext);\n        hostContext.clearSelection();\n      } else if (keyboardEvent.key === 'Escape') {\n        hostContext.clearSelection();\n      } else if (keyboardEvent.key === 'Backspace') {\n        if (!maybeRemoveSelectedNodes(inline)) return;\n        keyboardEvent.preventDefault();\n      } else {\n        return;\n      }\n    } finally {\n      finishEditing();\n    }\n  }\n  async triggerPaste(\n      inline: MarkdownInline,\n      node: InlineViewModelNode,\n      edit: {startIndex: number, oldEndIndex: number}, forceMarkdown = false) {\n    const content = await navigator.clipboard.read();\n    const mdItem =\n        content.find(item => item.types.includes('web text/markdown'));\n    let mdText;\n    if (mdItem) {\n      const blob = await mdItem.getType('web text/markdown');\n      mdText = await blob.text();\n      // TODO: Drop this hack for broken custom formats.\n      if (mdText.length === 0) {\n        mdText = await navigator.clipboard.readText();\n      }\n    } else if (forceMarkdown) {\n      mdText = await navigator.clipboard.readText();\n    }\n    if (mdText) {\n      const newFocus = insertMarkdown(mdText, node);\n      if (newFocus) focusNode(cast(inline.hostContext), newFocus, Infinity);\n    } else {\n      let text = await navigator.clipboard.readText();\n      // TODO: Escape block creation.\n      text = text.replace(/\\n/g, ' ');\n      const finishEditing = node.viewModel.tree.edit();\n      try {\n        this.editInlineNode(node, {\n          ...edit,\n          newText: text,\n          newEndIndex: edit.oldEndIndex + text.length,\n        }, cast(inline.hostContext)); // TODO: wrong context\n      } finally {\n        finishEditing();\n      }\n    }\n  }\n  onInlineInput(event: CustomEvent<InlineInput>) {\n    const {\n      detail: {inline, inputEvent, inputStart, inputEnd},\n    } = event;\n    if (!inline.node) return;\n\n    // TODO: Most edit types could be handled here. E.g. insertText\n    // could replace the selection.\n    const {hostContext: selectionHostContext} = getBlockSelectionTarget(inline) ?? {};\n    selectionHostContext?.clearSelection();\n    const finishEditing = inline.node.viewModel.tree.edit();\n    try {\n      if (handleInlineInputAsBlockEdit(event, cast(inline.hostContext))) {\n        this.autocomplete.abort();\n        return;\n      }\n      let newText;\n      let startIndex;\n      let oldEndIndex;\n      let newEndIndex: number;\n      if (inputEvent.inputType === 'insertText' ||\n          inputEvent.inputType === 'insertReplacementText' ||\n          inputEvent.inputType === 'insertFromPaste' ||\n          inputEvent.inputType === 'deleteByCut' ||\n          inputEvent.inputType === 'deleteContentBackward') {\n        startIndex = inputStart.index;\n        oldEndIndex = inputEnd.index;\n        if (inputEvent.inputType === 'insertReplacementText' ||\n            inputEvent.inputType === 'insertFromPaste') {\n          this.triggerPaste(inline, inline.node, {startIndex, oldEndIndex});\n          this.autocomplete.abort();\n          return;\n        } else if (inputEvent.inputType === 'deleteByCut') {\n          newText = '';\n        } else if (inputEvent.inputType === 'deleteContentBackward') {\n          newText = '';\n          if (startIndex === oldEndIndex) {\n            startIndex--;\n          }\n          startIndex = Math.max(0, startIndex);\n        } else {\n          newText = inputEvent.data ?? '';\n        }\n        newEndIndex = startIndex + newText.length;\n      } else {\n        console.log('unsupported inputType:', inputEvent.inputType);\n        return;\n      }\n\n      const edit = {\n        newText,\n        startIndex,\n        oldEndIndex,\n        newEndIndex,\n      };\n\n      this.editInlineNode(inline.node, edit, cast(inline.hostContext));\n      this.autocomplete.onInlineEdit(inline, newText, newEndIndex);\n    } finally {\n      finishEditing();\n    }\n  }\n  private editInlineNode(node: InlineViewModelNode, edit: InlineEdit, hostContext: HostContext) {\n    const newNodes = node.viewModel.edit(edit);\n    if (newNodes) {\n      // TODO: is this needed?\n      normalizeTree(node.viewModel.tree);\n      const next = findNextEditable(newNodes[0], cast(hostContext.root), true);\n      // TODO: is the focus offset always 0?\n      if (next) focusNode(hostContext, next, 0);\n    } else {\n      // TODO: generalize this (inline block mutation)\n      const parent = node.viewModel.parent;\n      if (parent?.type === 'list-item' && parent.checked === undefined &&\n          /^\\[( |x)] /.test(node.content)) {\n        parent.viewModel.updateChecked(node.content[1] === 'x');\n        node.viewModel.edit({\n          newText: '',\n          startIndex: 0,\n          newEndIndex: 0,\n          oldEndIndex: 4,\n        });\n      }\n      focusNode(hostContext, node, edit.newEndIndex);\n    }\n  }\n  getCommands(): CommandBundle {\n    const {inline: activeInline, startIndex, endIndex} =\n        this.markdownRenderer.getInlineSelection();\n    const activeNode = activeInline?.node;\n    const inTopLevelDocument = activeNode?.viewModel.tree === this.root?.viewModel.tree ?? false;\n    const transclusion = activeInline && getContainingTransclusion(activeInline);\n    return new SimpleCommandBundle('Choose command...', [\n      {\n        description: 'Find, Open, Create...',\n        execute: async () => {\n          return new BlockCommandBundle('Find, Open, Create', this.library,\n              async ({document, root}) => void this.navigate(document, root, true),\n              async ({name}) => void this.createAndNavigateByName(name, true));\n        },\n      },\n      {\n        description: 'Sync all',\n        execute: async () => void await this.library.sync(),\n      },\n      {\n        description: 'Force save',\n        execute: async () => void this.document?.save(),\n      },\n      {\n        description: 'Copy all as markdown',\n        execute: async () => {\n          const markdown = serializeToString(this.document!.tree.root);\n          copyMarkdownToClipboard(markdown);\n          return undefined;\n        },\n      },\n      ...(this.document && this.root === this.document.tree.root) ? [{\n        description: 'Delete document',\n        execute: async () => {\n          return new SimpleCommandBundle('Delete document?', [\n            {\n              description: 'No',\n              execute: async () => void 0,\n            },\n            {\n              description: 'Yes',\n              execute: async () => {\n                const tree = this.document!.tree;\n                const document = this.library.getDocumentByTree(tree);\n                await document?.delete();\n                await this.navigateByName('index', true);\n                return undefined;\n              }\n            },\n          ]);\n        },\n      }] : [],\n      ...activeInline?.hostContext?.hasSelection ? [{\n        description: 'Send to...',\n        execute: async () => {\n          return new BlockCommandBundle('Send to', this.library,\n              async (result) => void sendTo(result, this.library, activeInline.hostContext!, 'remove'),\n              async (result) => void sendTo(result, this.library, activeInline.hostContext!, 'remove'));\n        },\n      }, {\n        description: 'Send to and transclude...',\n        execute: async () => {\n          return new BlockCommandBundle('Send to and transclude', this.library,\n              async (result) => void sendTo(result, this.library, activeInline.hostContext!, 'transclude'),\n              async (result) => void sendTo(result, this.library, activeInline.hostContext!, 'transclude'));\n        },\n      }, {\n        description: 'Send to and link...',\n        execute: async () => {\n          return new BlockCommandBundle('Send to and link', this.library,\n              async (result) => void sendTo(result, this.library, activeInline.hostContext!, 'link'),\n              async (result) => void sendTo(result, this.library, activeInline.hostContext!, 'link'));\n        },\n      }] : [],\n      {\n        description: 'Backlinks',\n        execute: async () => {\n          const action = async (command: Command) => void this.navigateByName(command.description, true);\n          const commands = this.library.backLinks.getBacklinksByDocument(this.document!, this.library).map(name => ({\n            description: name,\n            execute: action,\n          }));\n          return new SimpleCommandBundle('Open Backlink', commands);\n        }\n      },\n      ...activeNode && startIndex !== undefined && endIndex !== undefined ? [{\n        description: 'Paste as markdown',\n        execute: async () => {\n          this.triggerPaste(\n              activeInline, activeNode, {startIndex, oldEndIndex: endIndex}, true);\n          return undefined;\n        },\n      }] : [],\n      ...inTopLevelDocument && activeNode && activeInline ? [{\n        description: 'Focus on block',\n        execute: async () => {\n          this.root = getLogicalContainingBlock(activeNode);\n          focusNode(cast(activeInline.hostContext), activeNode, startIndex);\n          return undefined;\n        },\n      }] : [],\n      ...inTopLevelDocument && this.root !== this.document?.tree.root ? [{\n        description: 'Focus on containing block',\n        execute: async () => {\n          if (this.root?.viewModel.parent) this.root = getLogicalContainingBlock(this.root.viewModel.parent);\n          if (activeNode && activeInline) focusNode(cast(activeInline.hostContext), activeNode, startIndex);\n          return undefined;\n        },\n      }] : [],\n      ...inTopLevelDocument && this.root !== this.document?.tree.root ? [{\n        description: 'Focus on document',\n        execute: async () => {\n          this.root = this.document?.tree.root;\n          if (activeNode) focusNode(cast(activeInline.hostContext), activeNode, startIndex);\n          return undefined;\n        },\n      }] : [],\n      ...transclusion ? [{\n        description: 'Delete transclusion',\n        execute: async () => {\n          const finished = transclusion.node!.viewModel.tree.edit();\n          transclusion.node!.viewModel.remove();\n          finished();\n          // TODO: focus\n          return undefined;\n        },\n      }] : [],\n      ...activeNode ? [{\n        description: 'Insert transclusion...',\n        execute: async () => {\n          const action = async ({name}: {name: string}) => {\n            const finished = activeNode.viewModel.tree.edit();\n            const newParagraph = activeNode.viewModel.tree.add({\n              type: 'code-block',\n              info: 'tc',\n              content: name,\n            });\n            newParagraph.viewModel.insertBefore(\n                cast(activeNode.viewModel.parent), activeNode.viewModel.nextSibling);\n            finished();\n            focusNode(activeInline.hostContext!, newParagraph);\n            return undefined;\n          };\n          return new BlockCommandBundle('Insert transclusion', this.library, action, action);\n        },\n      }] : [],\n      ...transclusion ? [{\n        description: 'Insert before transclusion',\n        execute: async () => {\n          const node = transclusion.node!;\n          const finished = node.viewModel.tree.edit();\n          const newParagraph = node.viewModel.tree.add({\n            type: 'paragraph',\n            content: '',\n          });\n          newParagraph.viewModel.insertBefore(\n              cast(node.viewModel.parent), node);\n          finished();\n          focusNode(cast(transclusion.hostContext), newParagraph, 0);\n          return undefined;\n        },\n      }] : [],\n      ...transclusion ? [{\n        description: 'Insert after transclusion',\n        execute: async () => {\n          const node = transclusion.node!;\n          const finished = node.viewModel.tree.edit();\n          const newParagraph = node.viewModel.tree.add({\n            type: 'paragraph',\n            content: '',\n          });\n          newParagraph.viewModel.insertBefore(\n              cast(node.viewModel.parent), node.viewModel.nextSibling);\n          finished();\n          focusNode(cast(transclusion.hostContext), newParagraph, 0);\n          return undefined;\n        },\n      }] : [],\n    ]);\n  }\n}\n\nfunction performLogicalInsertion(\n    context: ViewModelNode, nodes: ViewModelNode[]) {\n  const {parent, nextSibling} = nextLogicalInsertionPoint(context);\n  if (context.type === 'section') {\n    for (const node of nodes) {\n      node.viewModel.insertBefore(context);\n    }\n  } else if (parent.type == 'list') {\n    if (nodes.length === 1 && nodes[0].type === 'list') {\n      const [node] = nodes;\n      for (const child of children(node)) {\n        assert(child.type === 'list-item');\n        child.viewModel.insertBefore(parent, nextSibling);\n      }\n    } else {\n      const listItem = parent.viewModel.tree.add({\n        type: 'list-item',\n        // TODO: infer from list\n        marker: '*',\n      });\n      listItem.viewModel.insertBefore(parent, nextSibling);\n      for (const node of nodes) {\n        node.viewModel.insertBefore(listItem, undefined);\n      }\n    }\n  } else {\n    for (const node of nodes) {\n      node.viewModel.insertBefore(parent, nextSibling);\n    }\n  }\n}\n\nfunction nextLogicalInsertionPoint(node: ViewModelNode) {\n  if (!node.viewModel.nextSibling &&\n      node.viewModel.parent?.type === 'list-item') {\n    const listItem = node.viewModel.parent;\n    return {\n      parent: cast(listItem.viewModel.parent),\n      nextSibling: listItem.viewModel.nextSibling,\n    };\n  }\n  return {\n    parent: cast(node.viewModel.parent),\n    nextSibling: node.viewModel.nextSibling,\n  };\n}\n\nfunction maybeMergeContentInto(\n    node: InlineNode&ViewModelNode, target: ViewModelNode,\n    context: HostContext): boolean {\n  if (target.type === 'code-block' || target.type === 'paragraph' ||\n      target.type === 'section') {\n    focusNode(context, target, target.content.length);\n    (target.viewModel as InlineViewModel).edit({\n      startIndex: target.content.length,\n      oldEndIndex: target.content.length,\n      newEndIndex: target.content.length + node.content.length,\n      newText: node.content,\n    });\n    node.viewModel.remove();\n    return true;\n  }\n  return false;\n}\n\nfunction insertSiblingParagraph(\n    node: InlineNode&ViewModelNode,\n    root: ViewModelNode,\n    startIndex: number,\n    context: HostContext): boolean {\n  const newParagraph = node.viewModel.tree.add({\n    type: 'paragraph',\n    content: '',\n  });\n  newParagraph.viewModel.insertBefore(\n      cast(node.viewModel.parent), node.viewModel.nextSibling);\n  finishInsertParagraph(node, newParagraph, root, startIndex, context);\n  return true;\n}\n\nfunction insertParagraphInList(\n    node: InlineNode&ViewModelNode,\n    root: ViewModelNode, startIndex: number,\n    context: HostContext): boolean {\n  const {ancestor, path} = findAncestor(node, root, 'list');\n  if (!ancestor) return false;\n  let targetList;\n  let targetListItemNextSibling;\n  if (node.viewModel.nextSibling) {\n    if (node.viewModel.nextSibling.type === 'list') {\n      targetList = node.viewModel.nextSibling;\n      targetListItemNextSibling = targetList.viewModel.firstChild;\n    } else {\n      targetList = node.viewModel.tree.add({\n        type: 'list',\n      });\n      targetList.viewModel.insertBefore(\n          cast(node.viewModel.parent), node.viewModel.nextSibling);\n      targetListItemNextSibling = undefined;\n    }\n  } else {\n    targetList = ancestor;\n    targetListItemNextSibling = path[0].viewModel.nextSibling;\n  }\n\n  const firstListItem = targetList.viewModel.firstChild;\n  if (firstListItem && firstListItem.type !== 'list-item') return false;\n  const newListItem = node.viewModel.tree.add({\n    type: 'list-item',\n    marker: firstListItem?.marker ?? '* ',\n  });\n  newListItem.viewModel.insertBefore(targetList, targetListItemNextSibling);\n  if (newListItem.viewModel.previousSibling?.type === 'list-item' &&\n      newListItem.viewModel.previousSibling.checked !== undefined) {\n    newListItem.viewModel.updateChecked(false);\n  }\n  const newParagraph = node.viewModel.tree.add({\n    type: 'paragraph',\n    content: '',\n  });\n  newParagraph.viewModel.insertBefore(newListItem);\n  finishInsertParagraph(node, newParagraph, root, startIndex, context);\n  return true;\n}\n\n/**\n * Special case where we have a list-item that is not contained by a list\n * (because it is the root).\n */\nfunction insertParagraphInListItem(\n    node: InlineNode&ViewModelNode,\n    root: ViewModelNode, startIndex: number,\n    context: HostContext): boolean {\n  const {ancestor: listItem, path} = findAncestor(node, root, 'list-item');\n  if (!listItem) return false;\n  const newParagraph = node.viewModel.tree.add({\n    type: 'paragraph',\n    content: '',\n  });\n  newParagraph.viewModel.insertBefore(listItem, path[0].viewModel.nextSibling);\n  finishInsertParagraph(node, newParagraph, root, startIndex, context);\n  return true;\n}\n\nfunction insertParagraphInDocument(\n    node: InlineNode&ViewModelNode,\n    root: ViewModelNode,\n    startIndex: number,\n    context: HostContext): boolean {\n  const {ancestor: section, path} = findAncestor(node, root, 'document');\n  if (!section) return false;\n  const newParagraph = node.viewModel.tree.add({\n    type: 'paragraph',\n    content: '',\n  });\n  newParagraph.viewModel.insertBefore(section, path[0].viewModel.nextSibling);\n  finishInsertParagraph(node, newParagraph, root, startIndex, context);\n  return true;\n}\n\nfunction insertParagraphInSection(\n    node: InlineNode&ViewModelNode,\n    root: ViewModelNode,\n    startIndex: number,\n    context: HostContext): boolean {\n  let {ancestor: section, path} = findAncestor(node, root, 'section');\n  let nextSibling;\n  if (section) {\n    nextSibling = path![0].viewModel.nextSibling;\n  } else if (node.type === 'section') {\n    section = node;\n    nextSibling = section!.viewModel.firstChild;\n  }\n  if (!section) return false;\n  const newParagraph = node.viewModel.tree.add({\n    type: 'paragraph',\n    content: '',\n  });\n  newParagraph.viewModel.insertBefore(section, nextSibling);\n  finishInsertParagraph(node, newParagraph, root, startIndex, context);\n  return true;\n}\n\nfunction areAncestorAndDescendant(node: ViewModelNode, node2: ViewModelNode, root: ViewModelNode) {\n  return [...ancestors(node, root)].includes(node2) ||\n      [...ancestors(node2, root)].includes(node);\n}\n\nfunction finishInsertParagraph(\n    node: InlineNode&ViewModelNode,\n    newParagraph: ParagraphNode&ViewModelNode,\n    root: ViewModelNode,\n    startIndex: number, context: HostContext) {\n  const shouldSwap = startIndex === 0 && node.content.length > 0 &&\n      !areAncestorAndDescendant(node, newParagraph, root);\n  if (shouldSwap) {\n    swapNodes(node, newParagraph);\n  } else {\n    (newParagraph.viewModel as InlineViewModel).edit({\n      startIndex: 0,\n      newEndIndex: 0,\n      oldEndIndex: 0,\n      newText: node.content.substring(startIndex),\n    });\n\n    (node.viewModel as InlineViewModel).edit({\n      startIndex,\n      oldEndIndex: node.content.length,\n      newEndIndex: startIndex,\n      newText: '',\n    });\n  }\n  focusNode(context, newParagraph);\n}\n\nfunction handleInlineInputAsBlockEdit(\n    {\n      detail: {inline, inputEvent, inputStart, inputEnd},\n    }: CustomEvent<InlineInput>,\n    context: HostContext): boolean {\n  if (!inline.node) return false;\n  const root = cast(context.root);\n  if (inputEvent.inputType === 'deleteContentBackward') {\n    if (inputStart.index !== 0 || inputEnd.index !== 0) return false;\n    const node = inline.node;\n    // Turn sections and code-blocks into paragraphs.\n    if (node.type === 'section') {\n      node.viewModel.updateMarker(node.marker.substring(0, node.marker.length - 1));\n      if (node.marker === '') {\n        const paragraph = node.viewModel.tree.add({\n          type: 'paragraph',\n          content: node.content,\n        });\n        paragraph.viewModel.insertBefore(cast(node.viewModel.parent), node);\n        // Move all section content out.\n        for (const child of children(node)) {\n          child.viewModel.insertBefore(cast(node.viewModel.parent), node);\n        }\n        node.viewModel.remove();\n        focusNode(context, paragraph, 0);\n      } else {\n        focusNode(context, node, 0);\n      }\n      return true;\n    } else if (node.type === 'code-block') {\n      const paragraph = node.viewModel.tree.add({\n        type: 'paragraph',\n        content: node.content,  // TODO: detect new blocks\n      });\n      paragraph.viewModel.insertBefore(cast(node.viewModel.parent), node);\n      node.viewModel.remove();\n      focusNode(context, paragraph, 0);\n      return true;\n    }\n\n    // Remove a surrounding block-quote.\n    const {ancestor} = findAncestor(node, root, 'block-quote');\n    if (ancestor) {\n      // Unless there's an earlier opportunity to merge into a previous\n      // content node.\n      for (const prev of reverseDfs(node, ancestor)) {\n        if (maybeMergeContentInto(node, prev, context)) return true;\n      }\n      for (const child of [...children(ancestor)]) {\n        child.viewModel.insertBefore(cast(ancestor.viewModel.parent), ancestor);\n      }\n      ancestor.viewModel.remove();\n      focusNode(context, node);\n      return true;\n    }\n\n    // Merge into a previous content node.\n    for (const prev of reverseDfs(node)) {\n      if (maybeMergeContentInto(node, prev, context)) return true;\n    }\n  } else if (inputEvent.inputType === 'insertParagraph') {\n    return insertParagraphInList(inline.node, root, inputStart.index, context) ||\n        insertParagraphInListItem(inline.node, root, inputStart.index, context) ||\n        insertParagraphInSection(inline.node, root, inputStart.index, context) ||\n        insertParagraphInDocument(inline.node, root, inputStart.index, context);\n  } else if (inputEvent.inputType === 'insertLineBreak') {\n    return insertSiblingParagraph(inline.node, root, inputStart.index, context);\n  }\n  return false;\n}\n\nasync function sendTo({root, name}: {root?: ViewModelNode, name: string}, library: Library, hostContext: HostContext, mode: 'remove'|'transclude'|'link') {\n  if (!root) {\n    // TODO: We shouldn't need to make the call here, but TS can't\n    // figure out `root` that root is defined if we reassign it...\n    const root = (await library.newDocument(name)).tree.root;\n    sendTo({root, name}, library, hostContext, mode);\n    return;\n  }\n  const markdown = serializeSelection(hostContext);\n  insertMarkdown(markdown, root.viewModel.lastChild ?? root);\n  const focus = cast(hostContext.selectionFocus);\n  // TODO: if the selection is a section, use that section's name\n  const targetName = name;\n  let replacement;\n  switch (mode) {\n    case 'remove':\n      break;\n    case 'transclude':\n      replacement = focus.viewModel.tree.add({\n        type: 'code-block',\n        info: 'tc',\n        content: targetName,\n      });\n      break\n    case 'link':\n      replacement = focus.viewModel.tree.add({\n        type: 'paragraph',\n        content: `[${targetName}]`,\n      });\n      break\n  }\n  const finish = focus.viewModel.tree.edit();\n  try {\n    replacement?.viewModel.insertBefore(cast(focus.viewModel.parent), focus);\n    maybeRemoveSelectedNodesIn(hostContext);\n  } finally {\n    finish();\n  }\n}\n\nfunction insertMarkdown(markdown: string, node: ViewModelNode) {\n  const root = parseBlocks(markdown + '\\n');\n  if (!root) return;\n  assert(root.type === 'document' && root.children);\n  const finishEditing = node.viewModel.tree.edit();\n  try {\n    const newNodes = root.children.map(\n        newNode => node.viewModel.tree.add<MarkdownNode>(newNode));\n    let newFocus = findFinalEditable(newNodes[0]);\n    performLogicalInsertion(node, newNodes);\n    return newFocus;\n  } finally {\n    finishEditing();\n  }\n}\n\nfunction copyMarkdownToClipboard(markdown: string) {\n  const textType = 'text/plain';\n  const mdType = 'web text/markdown';\n  navigator.clipboard.write([\n    new ClipboardItem({\n      [textType]: new Blob([markdown], {type: textType}),\n      [mdType]: new Blob([markdown], {type: mdType}),\n}),\n  ]);\n}\n\nfunction serializeSelection(hostContext: HostContext) {\n  return serializeToString(cast(hostContext.root), (node) => {\n    switch (node.type) {\n      case 'section':\n      case 'paragraph':\n      case 'code-block':\n        return hostContext.selection.has(node as ViewModelNode);\n      case 'unsupported':\n        return false;\n      default:\n        return true;\n    }\n  });\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'pkm-editor': Editor;\n  }\n  interface HTMLElementEventMap {\n    'editor-navigate': CustomEvent<EditorNavigation>;\n    'editor-commands': CustomEvent<CommandBundle>;\n  }\n}\n"]}