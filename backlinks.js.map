{"version":3,"file":"backlinks.js","sourceRoot":"","sources":["../src/backlinks.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {dfs} from './markdown/inline-parser.js';\nimport {InlineViewModelNode} from './markdown/view-model.js';\nimport {Library, Document} from './library.js';\n\nexport class BackLinks {\n  private links: Map<InlineViewModelNode, Set<string>> = new Map();\n  private backLinks: Map<string, Set<InlineViewModelNode>> = new Map();\n\n  private getBacklinksByName(name: string) {\n    return [...(this.backLinks.get(name)?.values() ?? [])].map(\n      (node) => node.viewModel.tree\n    );\n  }\n  getBacklinksByDocument(document: Document, library: Library) {\n    const sources = new Set<string>();\n    for (const name of document.allNames) {\n      for (const tree of this.getBacklinksByName(name)) {\n        const source = library.getDocumentByTree(tree)?.name;\n        if (source == null) continue;\n        sources.add(source);\n      }\n    }\n    // TODO: maybe sort by last edit time\n    // TODO: return block rather than string?\n    return [...sources.values()];\n  }\n  postEditUpdate(\n    node: InlineViewModelNode,\n    change: 'connected' | 'disconnected' | 'changed'\n  ) {\n    const ivmn = node as InlineViewModelNode;\n    if (change === 'disconnected') {\n      const links = this.links.get(ivmn);\n      if (links) {\n        for (const target of links) {\n          this.backLinks.get(target)?.delete(ivmn);\n        }\n        this.links.delete(ivmn);\n      }\n    } else {\n      let links = this.links.get(ivmn);\n      const preLinks = new Set(links?.values() ?? []);\n      for (const next of dfs(ivmn.viewModel.inlineTree.rootNode)) {\n        if (next.type === 'inline_link' || next.type === 'shortcut_link') {\n          const text =\n            next.namedChildren.find((node) => node.type === 'link_text')\n              ?.text ?? '';\n          const destination =\n            next.namedChildren.find((node) => node.type === 'link_destination')\n              ?.text ?? text;\n          if (!links) {\n            links = new Set();\n            this.links.set(ivmn, links);\n          }\n          links.add(destination);\n          let backLinks = this.backLinks.get(destination);\n          if (!backLinks) {\n            backLinks = new Set();\n            this.backLinks.set(destination, backLinks);\n          }\n          backLinks.add(ivmn);\n          preLinks.delete(destination);\n        }\n      }\n      for (const target of preLinks) {\n        this.backLinks.get(target)?.delete(ivmn);\n        this.links.get(ivmn)?.delete(target);\n      }\n    }\n  }\n}\n"]}