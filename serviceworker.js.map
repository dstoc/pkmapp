{"version":3,"file":"serviceworker.js","sourceRoot":"","sources":["../src/serviceworker.ts"],"names":[],"mappings":"AAAA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AAEjC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAU,EAAE,EAAE;IAC5C,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;IAC7F,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC1C,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM;QAAE,OAAO;IAC1C,IAAI,MAAM,CAAC,QAAQ,KAAK,GAAG;QAAE,OAAO;IACpC,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;QAC1C,MAAM,IAAI,GAAG,QAAQ,GAAG,YAAY,CAAC;QACrC,IAAI,IAAI,KAAK,MAAM,CAAC,QAAQ;YAAE,OAAO;QACrC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3C,OAAO;KACR;IACD,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC;QAAE,OAAO;IAC1C,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,GAAG,aAAa,CAAC,CAAC,CAAC;IACnD,OAAO;AACT,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2023 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nself.addEventListener('fetch', (event: any) => {\n  const basePath = new URL(self.location.toString()).pathname.replace('/serviceworker.js', '');\n  const target = new URL(event.request.url);\n  if (target.origin !== self.origin) return;\n  if (target.pathname === '/') return;\n  if (target.pathname.endsWith('/pkmapp.js')) {\n    const path = basePath + '/pkmapp.js';\n    if (path === target.pathname) return;\n    event.respondWith(Response.redirect(path));\n    return;\n  }\n  if (target.pathname.includes('.')) return;\n  event.respondWith(fetch(basePath + '/index.html'));\n  return;\n});\n"]}