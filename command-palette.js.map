{"version":3,"file":"command-palette.js","sourceRoot":"","sources":["../src/command-palette.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {TemplateResult, css, customElement, html, LitElement, query, state, property} from './deps/lit.js';\nimport {cast} from './asserts.js';\nimport './emoji.js';\n\nexport interface CommandBundle {\n  readonly description: string;\n  getCommands(input: string, limit: number): Promise<Command[]>;\n}\n\nexport interface Command {\n  readonly description: string;\n  readonly icon?: string;\n  execute(command: Command): Promise<CommandBundle|undefined>;\n  readonly preview?: () => TemplateResult;\n}\n\nexport interface FreeformCommandTemplate {\n  readonly icon?: string;\n  execute(command: Command): Promise<CommandBundle|undefined>;\n}\n\nexport class SimpleCommandBundle {\n  constructor(readonly description: string, private commands: Command[], private freeform?: FreeformCommandTemplate) {\n  }\n  async getCommands(input: string) {\n    const pattern = new RegExp(\n        input.replace(\n            /(.)/g, (c) => c.replace(/[^a-zA-Z0-9]/, '\\\\$&') + '.*?'),\n        'i');\n    const commands = this.commands.filter(({description}) => pattern.test(description));\n    if (this.freeform) commands.push({...this.freeform, description: input});\n    return commands;\n  }\n}\n\n@customElement('pkm-command-palette')\nexport class CommandPalette extends LitElement {\n  @property({attribute: true}) noHeader = false;\n  @state() activeIndex = 0;\n  @state() bundle: CommandBundle|undefined;\n  @state() activeItems: Command[] = [];\n  private activeSearch?: string;\n  @query('input') input!: HTMLInputElement;\n  @query('#items') items!: HTMLElement;\n  static override get styles() {\n    return css`\n      :host {\n        display: grid;\n        height: 100%;\n      }\n      input, .item {\n        border: none;\n        color: var(--root-color);\n        outline: none;\n        background: transparent;\n        font-size: 14pt;\n        padding-left: 10px;\n        font-family: var(--root-font);\n      }\n      input, #items {\n        margin: 10px;\n      }\n      #separator, #preview-separator {\n        height: 100%;\n        background: var(--md-accent-color);\n        opacity: 0.25;\n      }\n      #separator {\n        grid-area: sep;\n      }\n      #preview-separator {\n        grid-area: psep;\n      }\n      :host-context([collapsed]) input,\n      :host-context([collapsed]) #separator {\n        visibility: hidden;\n      }\n      :host-context([collapsed]) #preview-separator,\n      :host-context([collapsed]) #preview {\n        display: none;\n      }\n      .item {\n        padding-top: 5px;\n        padding-bottom: 5px;\n      }\n      .item[data-active] {\n        background: rgba(128,128,128,0.3);\n        border-radius: 5px;\n      }\n      #items {\n        overflow: scroll;\n        grid-area: items;\n      }\n      .icon {\n        font-family: 'noto emoji';\n      }\n      pkm-emoji {\n        font-family: 'noto emoji';\n        font-size: 200px;\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        align-items: center;\n      }\n      #preview {\n        padding-left: 10px;\n        margin: 10px;\n        overflow: scroll;\n        grid-area: preview;\n      }\n      :host {\n        grid-template-rows: min-content 1px 1fr 1px 1fr;\n        grid-template-areas:\n          \"input\"\n          \"sep\"\n          \"items\"\n          \"psep\"\n          \"preview\";\n      }\n      :host-context([collapsed]) {\n        grid-template-rows: 0 0 1fr 1px;\n      }\n      @container (min-width: 800px) {\n        :host {\n          grid-template-columns: 500px 1px;\n          grid-template-rows: min-content 1px 1fr;\n          grid-template-areas:\n            \"input input input\"\n            \"sep   sep   sep\"\n            \"items psep  preview\";\n        }\n        :host-context([collapsed]) {\n          grid-template-rows: 0 0 1fr;\n        }\n      }\n    `;\n  }\n  override render() {\n    const preview = this.activeItems?.[this.activeIndex]?.preview ??\n       (() => html`<pkm-emoji .text=${this.activeItems?.[this.activeIndex]?.description ?? 'default'}></pkm-emoji>`);\n    return html`\n      <input\n          type=text\n          @keydown=${this.handleInputKeyDown}\n          @input=${() => this.onInput()}\n          placeholder=${this.bundle?.description ?? ''}></input>\n      <div id=separator></div>\n      <div id=items>\n        ${\n      this.activeItems.map(\n          (item, idx) => html`\n        <div\n            class=item\n            ?data-active=${idx === this.activeIndex}\n            @click=${this.handleItemClick}\n            @pointermove=${() => this.activeIndex = idx}><span class=icon>${item.icon}</span>${\n              item.description}</div>\n        `)}\n      </div>\n      ${preview ? html`\n        <div id=preview-separator></div>\n        <div id=preview>${preview?.()}</div>\n      ` : ''}\n    `;\n  }\n  private async onInput() {\n    const search = this.input?.value ?? '';\n    if (search != this.activeSearch) {\n      this.activeSearch = search;\n      this.activeIndex = 0;\n    }\n    this.activeItems = this.bundle ? await this.bundle.getCommands(search, 100) : [];\n    this.activeIndex =\n        Math.max(0, Math.min(this.activeIndex, this.activeItems.length - 1));\n  }\n  private handleInputKeyDown(e: KeyboardEvent) {\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        this.next();\n        return;\n      case 'ArrowUp':\n        e.preventDefault();\n        this.previous();\n        return;\n      case 'Enter':\n        e.preventDefault();\n        this.commit();\n        return;\n    }\n  }\n  private async reset() {\n    this.input.value = '';\n    this.bundle = undefined;\n    this.activeIndex = 0;\n    this.activeSearch = undefined;\n    this.activeItems = [];\n  }\n  private handleItemClick() {\n    this.commit();\n  }\n  async setInput(input: string) {\n    this.input.value = input;\n    await this.onInput();\n  }\n  async commit() {\n    const selected = this.activeItems[this.activeIndex];\n    const next = await selected.execute(selected);\n    if (next) {\n      await this.trigger(next);\n    } else {\n      this.dispatchEvent(new CustomEvent('commit'))\n    }\n  }\n  async trigger(bundle: CommandBundle) {\n    await this.reset();\n    this.bundle = bundle;\n    await this.onInput();\n  }\n  async triggerCommand(command: Command) {\n    const bundle = await command.execute(command);\n    await this.trigger(cast(bundle));\n  }\n  next() {\n    this.activeIndex = Math.min(this.activeItems.length - 1, this.activeIndex + 1);\n    this.scrollToActiveItem();\n  }\n  previous() {\n    this.activeIndex = Math.max(0, this.activeIndex - 1);\n    this.scrollToActiveItem();\n  }\n  private scrollToActiveItem() {\n    const item = this.items.querySelector(`:nth-child(${this.activeIndex})`);\n    item?.scrollIntoView({block: 'center'})\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'pkm-command-palette': CommandPalette;\n  }\n}\n"]}