{"version":3,"file":"command-palette.js","sourceRoot":"","sources":["../src/command-palette.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {css, customElement, html, LitElement, query, state} from './deps/lit.js';\n\nexport interface Argument {\n  readonly description: string;\n  readonly suggestions: string[];\n  validate(argument: string): boolean;\n}\n\nexport interface Command {\n  readonly description: string;\n  readonly argument?: Argument;\n  execute(argument?: string): Promise<void>;\n}\n\n@customElement('pkm-command-palette')\nexport class CommandPalette extends LitElement {\n  @state() activeIndex = 0;\n  @query('dialog') dialog!: HTMLDialogElement;\n  @query('input') input!: HTMLInputElement;\n  static override get styles() {\n    return css`\n      dialog[open] {\n        color: var(--root-color);\n        margin-top: 50px;\n        background: red;\n        background: var(--pkm-dialog-bgcolor);\n        border: 3px solid var(--md-accent-color);\n        border-radius: 10px;\n        width: 700px;\n        display: grid;\n        padding: 0;\n      }\n      dialog::backdrop {\n        backdrop-filter: blur(3px);\n        background: rgba(128,128,128,0.2);\n      }\n      input, .item {\n        border: none;\n        color: var(--root-color);\n        outline: none;\n        background: transparent;\n        font-size: 14pt;\n        padding-left: 10px;\n        font-family: var(--root-font);\n      }\n      input, #items {\n        margin: 10px;\n      }\n      #separator {\n        height: 1px;\n        background: var(--md-accent-color);\n        opacity: 0.25;\n      }\n      .item {\n        padding-top: 5px;\n        padding-bottom: 5px;\n      }\n      .item[data-active] {\n        background: rgba(128,128,128,0.3);\n        border-radius: 5px;\n      }\n      #items {\n        max-height: 50vh;\n        overflow: scroll;\n      }\n    `;\n  }\n  @state() pendingCommand?: Command;\n  @state() items: Command[] = [];\n  activeSearch?: string;\n  activeItems: Command[] = [];\n  override render() {\n    const search = this.input?.value ?? '';\n    if (search != this.activeSearch) {\n      this.activeSearch = search;\n      this.activeIndex = 0;\n      const pattern = new RegExp(\n          search.replace(\n              /(.)/g, c => c.replace(/[^a-zA-Z0-9]/, '\\\\$&') + '.*?'),\n          'i');\n      this.activeItems = this.items.filter(item => {\n        return pattern.test(item.description);\n      });\n    }\n    this.activeIndex =\n        Math.max(0, Math.min(this.activeIndex, this.activeItems.length - 1));\n    return html`\n      <dialog>\n        <input\n            type=text\n            @keydown=${this.handleInputKeyDown}\n            @input=${() => this.requestUpdate()}\n            placeholder=${\n        this.pendingCommand?.description ?? 'Search commands...'}></input>\n        <div id=separator></div>\n        <div id=items>\n          ${\n        this.activeItems.map(\n            (item, idx) => html`\n          <div\n              class=item\n              ?data-active=${idx === this.activeIndex}\n              @click=${this.handleItemClick}\n              @pointermove=${() => this.activeIndex = idx}>${\n                item.description}</div>\n          `)}\n        </div>\n      </dialog>\n    `;\n  }\n  private handleInputKeyDown(e: KeyboardEvent) {\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        this.activeIndex++;\n        return;\n      case 'ArrowUp':\n        e.preventDefault();\n        this.activeIndex--;\n        return;\n      case 'Enter':\n        e.preventDefault();\n        this.commit();\n        return;\n    }\n  }\n  private reset() {\n    this.pendingCommand = undefined;\n    this.input.value = '';\n    this.activeIndex = 0;\n    this.activeSearch = undefined;\n    this.activeItems = [];\n  }\n  private commit() {\n    const selected = this.activeItems[this.activeIndex];\n    if (selected?.argument) {\n      // Made a selection, need to complete argument.\n      const argument = selected.argument;\n      this.reset();\n      this.pendingCommand = selected;\n      this.items = argument.suggestions.map(description => ({\n                                              description,\n                                              async execute() {},\n                                            }));\n    } else if (this.pendingCommand) {\n      // Argument completion.\n      const argument = selected ? selected.description : this.activeSearch;\n      if (!this.pendingCommand.argument!.validate(argument ?? '')) return;\n      this.pendingCommand.execute(argument);\n      this.dialog.close();\n    } else if (selected) {\n      // Made a selection, no argument needed.\n      selected.execute();\n      this.dialog.close();\n    }\n  }\n  private handleItemClick() {\n    this.commit();\n  }\n  trigger(commands: Command[]) {\n    this.dialog.showModal();\n    this.reset();\n    this.items = commands;\n    this.requestUpdate();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'pkm-command-palette': CommandPalette;\n  }\n}\n"]}