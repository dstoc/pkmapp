{"version":3,"file":"observe.js","sourceRoot":"","sources":["../src/observe.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {assert, cast} from './asserts.js';\n\nexport class Observe<T> {\n  private observers = new Set<(target: T) => void>();\n  private state: 'active' | 'suspended' | 'delegated';\n  private resumed?: Promise<void>;\n  constructor(readonly target: T, private delegate?: Observe<any>) {\n    this.state = delegate ? 'delegated' : 'active';\n  }\n  suspend() {\n    assert(this.state === 'active');\n    this.state = 'suspended';\n    let result: () => void;\n    this.resumed = new Promise(\n      (resolve) =>\n        (result = () => {\n          this.state = 'active';\n          this.resumed = undefined;\n          resolve();\n        })\n    );\n    return result!;\n  }\n  notify() {\n    if ((this.delegate?.state ?? this.state) === 'suspended') {\n      // TODO: coalesce\n      cast(this.delegate?.resumed ?? this.resumed).then(() => this.notify());\n      return;\n    }\n    for (const observer of this.observers.values()) {\n      observer(this.target);\n    }\n  }\n  add(observer: (node: T) => void) {\n    this.observers.add(observer);\n  }\n  remove(observer: (node: T) => void) {\n    this.observers.delete(observer);\n  }\n}\n\nexport class Observer<T, O> {\n  constructor(\n    private target: () => T,\n    private add: (target: T, observer: (value: O) => void) => void,\n    private remove: (target: T, observer: (value: O) => void) => void,\n    private observer: (value: O) => void\n  ) {}\n  private cache?: T;\n  update(clear = false) {\n    const oldCache = this.cache;\n    if (clear) {\n      this.cache = undefined;\n    } else {\n      this.cache = this.target();\n    }\n    if (this.cache !== oldCache) {\n      if (oldCache !== undefined) {\n        this.remove(oldCache, this.observer);\n      }\n      if (this.cache !== undefined) {\n        this.add(this.cache, this.observer);\n      }\n    }\n  }\n}\n\nexport class Observers {\n  constructor(...observers: Observer<any, any>[]) {\n    this.observers = observers;\n  }\n  private observers: Observer<any, any>[];\n  update(clear = false) {\n    for (const observer of this.observers) observer.update(clear);\n  }\n  clear() {\n    this.update(true);\n  }\n}\n"]}