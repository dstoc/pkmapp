{"version":3,"file":"emoji.js","sourceRoot":"","sources":["../src/emoji.ts"],"names":[],"mappings":"AAAA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;;;;AAEjC,OAAO,EAAC,aAAa,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAC,MAAM,eAAe,CAAC;AAE/E,KAAK,UAAU,kBAAkB,CAAC,KAAa;IAC7C,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CACrC,OAAO,EACP,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAChC,CAAC;IACF,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,MAAM,KAAK,GAAG;QACZ,GAAG;QACH,IAAI;QACJ,GAAG;QACH,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,KAAK;QACL,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;KACL,CAAC;IACF,OAAO,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;AACrC,CAAC;AAGM,IAAM,KAAK,GAAX,MAAM,KAAM,SAAQ,UAAU;IAG1B,YAAY,CAAC,iBAAmC;QACvD,IAAI,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YACjC,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;QACD,OAAO,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IACQ,MAAM;QACb,OAAO,IAAI,CAAA,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC;IACnC,CAAC;IACD,KAAK,CAAC,WAAW;QACf,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;YAC3B,IAAI,CAAC,KAAK,GAAG,MAAM,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClD;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;SACxB;IACH,CAAC;CACF,CAAA;AAlBa;IAAX,QAAQ,EAAE;mCAAe;AACT;IAAhB,KAAK,EAAE;oCAAwB;AAFrB,KAAK;IADjB,aAAa,CAAC,WAAW,CAAC;GACd,KAAK,CAmBjB","sourcesContent":["// Copyright 2023 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {customElement, html, LitElement, state, property} from './deps/lit.js';\n\nasync function getConsistentEmoji(value: string) {\n  const sha1 = await crypto.subtle.digest(\n    'SHA-1',\n    new TextEncoder().encode(value)\n  );\n  const index = new Uint8Array(sha1)[0];\n  const emoji = [\n    '☕',\n    '✌️',\n    '✨',\n    '🌟',\n    '🌭',\n    '🍔',\n    '🍕',\n    '🍛',\n    '🍜',\n    '🍝',\n    '🍟',\n    '🍠',\n    '🍣',\n    '🍤',\n    '🍦',\n    '🍦',\n    '🍧',\n    '🍨',\n    '🍩',\n    '🍪',\n    '🍫',\n    '🍬',\n    '🍭',\n    '🍮',\n    '🍯',\n    '🍰',\n    '🍱',\n    '🍲',\n    '🍳',\n    '🍴',\n    '🍵',\n    '🍶',\n    '🍷',\n    '🍸',\n    '🍹',\n    '🍺',\n    '🍻',\n    '🍼',\n    '🍽️',\n    '🍾',\n    '🍿',\n    '🎁',\n    '🎂',\n    '🎆',\n    '🎇',\n    '🎈',\n    '🎉',\n    '🎊',\n    '🐣',\n    '💥',\n    '💫',\n    '🔥',\n    '🚀',\n    '🥂',\n    '🥃',\n    '🥄',\n    '🥗',\n    '🥘',\n    '🥙',\n    '🥟',\n    '🥠',\n    '🥡',\n    '🥢',\n    '🥤',\n    '🥨',\n    '🥪',\n    '🥫',\n    '🧀',\n    '🧂',\n    '🩴',\n  ];\n  return emoji[index % emoji.length];\n}\n\n@customElement('pkm-emoji')\nexport class Emoji extends LitElement {\n  @property() text?: string;\n  @state() private emoji?: string;\n  override shouldUpdate(changedProperties: Map<string, any>) {\n    if (changedProperties.has('text')) {\n      this.updateEmoji();\n    }\n    return changedProperties.has('emoji');\n  }\n  override render() {\n    return html`${this.emoji ?? ''}`;\n  }\n  async updateEmoji() {\n    if (this.text !== undefined) {\n      this.emoji = await getConsistentEmoji(this.text);\n    } else {\n      this.emoji = undefined;\n    }\n  }\n}\n"]}