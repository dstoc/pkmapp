{"version":3,"file":"metadata.js","sourceRoot":"","sources":["../src/metadata.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {CodeBlockNode, SectionNode} from './markdown/node.js';\nimport type {ViewModelNode} from './markdown/view-model.js';\nimport {isLogicalContainingBlock} from './block-util.js';\nimport {assert} from './asserts.js';\n\nclass SetBiMap<T> {\n  private index = new Map<string, Set<T>>;\n  private reverse = new Map<T, Set<string>>;\n  private normalized = new Map<string, Set<T>>();\n  values() {\n    return this.index.keys();\n  }\n  getValues(target: T) {\n    return this.reverse.get(target);\n  }\n  getTargets(value: string) {\n    return this.normalized.get(value.toLowerCase());\n  }\n  add(target: T, value: string) {\n    let targets = this.index.get(value);\n    if (!targets) {\n      targets = new Set();\n      this.index.set(value, targets);\n    }\n    targets.add(target);\n    let values = this.reverse.get(target);\n    if (!values) {\n      values = new Set();\n      this.reverse.set(target, values);\n    }\n    values.add(value);\n    const normalizedValue = value.toLowerCase();\n    let normalizedTargets = this.normalized.get(normalizedValue);\n    if (!normalizedTargets) {\n      normalizedTargets = new Set();\n      this.normalized.set(normalizedValue, normalizedTargets);\n    }\n    normalizedTargets.add(target);\n  }\n  remove(target: T, value: string) {\n    let targets = this.index.get(value);\n    targets?.delete(target);\n    if (targets?.size === 0) this.index.delete(value);\n    let values = this.reverse.get(target);\n    values?.delete(value);\n    if (values?.size === 0) this.reverse.delete(target);\n    const normalizedValue = value.toLowerCase();\n    let normalizedTargets = this.normalized.get(normalizedValue);\n    normalizedTargets?.delete(target);\n    if (normalizedTargets?.size === 0) this.normalized.delete(normalizedValue);\n  }\n  update(target: T, values: Iterable<string>) {\n    const stale = new Set(this.reverse.get(target));\n    for (const value of values) {\n      this.add(target, value);\n      stale.delete(value);\n    }\n    for (const value of stale) {\n      this.remove(target, value);\n    }\n  }\n}\n\nclass ProviderMap<Provider, Target, Value> {\n  private values = new Map<Target, Value>();\n  private targets = new Map<Provider, Target>();\n  constructor(readonly changed: (target: Target, value?: Value, newValue?: Value) => void) {\n  }\n  update(provider: Provider, target?: Target, value?: Value) {\n    const previousTarget = this.targets.get(provider);\n    const previousValue = previousTarget ? this.values.get(previousTarget) : undefined;\n    const targetChanged = previousTarget !== target;\n    const valueChanged = previousValue !== value;\n    if (previousTarget && (targetChanged || value == undefined)) {\n      this.targets.delete(provider);\n      this.values.delete(previousTarget);\n    }\n    if (value !== undefined && (targetChanged || valueChanged)) {\n      assert(target);\n      this.targets.set(provider, target);\n      this.values.set(target, value);\n    }\n    if (targetChanged) {\n      if (previousTarget) {\n        this.changed(previousTarget, undefined, previousValue)\n      }\n      if (value !== undefined) {\n        assert(target);\n        this.changed(target, value, undefined);\n      }\n    } else if (valueChanged) {\n      assert(target);\n      this.changed(target, value, previousValue);\n    }\n  }\n}\n\ntype Section = ViewModelNode&SectionNode;\n\nexport class Metadata {\n  private meta = new ProviderMap<ViewModelNode, ViewModelNode, string>(\n    (target, value) => {\n      this.nameMap.update(target, value !== undefined ? [value] : []);\n      target.viewModel.observe.notify();\n    });\n  private nameMap = new SetBiMap<ViewModelNode>();\n  private sectionNameMap = new SetBiMap<Section>();\n\n  getAllNames() {\n    return [\n      ...this.nameMap.values(),\n      ...this.sectionNameMap.values(),\n    ];\n  }\n  getNames(node: ViewModelNode) {\n    if (node.type !== 'section' && node.viewModel.firstChild?.type === 'section') {\n      node = node.viewModel.firstChild;\n    }\n    const result = [...this.nameMap.getValues(node)?.values() ?? []];\n    if (node.type === 'section') result.push(node.content);\n    return result;\n  }\n  findByName(name: string) {\n    const sections = [...this.sectionNameMap.getTargets(name)?.values() ?? []].map(section => {\n      if (!isLogicalContainingBlock(section)) {\n        return section.viewModel.parent!;\n      }\n      return section;\n    });\n    const named = [...this.nameMap.getTargets(name)?.values() ?? []].map(result => {\n      if (result && !isLogicalContainingBlock(result)) {\n        return result.viewModel.parent!;\n      }\n      return result;\n    });\n    return [...sections, ...named];\n  }\n  updateSection(node: Section, change: 'connected'|'disconnected'|'changed') {\n    if (change === 'disconnected') {\n      this.sectionNameMap.update(node, []);\n    } else {\n      this.sectionNameMap.update(node, [node.content]);\n    }\n    if (change === 'changed' && !isLogicalContainingBlock(node)) {\n      node.viewModel.parent?.viewModel.observe.notify();\n    }\n  }\n  updateCodeblock(node: ViewModelNode&CodeBlockNode, change: 'connected'|'disconnected'|'changed') {\n    const parent = node.viewModel.parent;\n    const isMetadata = change !== 'disconnected' && node.info === 'meta';\n    const valid = isMetadata && (isLogicalContainingBlock(parent) || parent?.type === 'section');\n    if (valid) {\n      this.meta.update(node, parent, node.content);\n    } else {\n      this.meta.update(node);\n    }\n  }\n}\n"]}